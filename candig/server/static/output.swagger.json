{"swagger": "2.0", "info": {"title": "CanDIG Services", "version": "1.0", "description": "Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries."}, "schemes": ["https", "http"], "consumes": ["application/json"], "produces": ["application/json"], "paths": {"/datasets/search": {"post": {"summary": "Gets a list of `Dataset` matching the search criteria.", "description": "`POST /datasets/search` must accept a JSON version of\n`SearchDatasetsRequest` as the post body and will return a JSON\nversion of `SearchDatasetsResponse`.", "operationId": "SearchDatasets", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchDatasetsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchDatasetsRequest"}}], "tags": ["MetadataService"]}}, "/datasets/{dataset_id}": {"get": {"summary": "Gets a `Dataset` by ID.", "description": "`GET /datasets/{dataset_id}` will return a JSON version of\n`Dataset`.", "operationId": "GetDataset", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghDataset"}}}, "parameters": [{"name": "dataset_id", "description": "The ID of the `Dataset` to be retrieved.", "in": "path", "required": true, "type": "string"}], "tags": ["MetadataService"]}}, "/celltransplants/search": {"post": {"summary": "\nGets a list of Celltransplants accessible through the API.\n", "operationId": "SearchCelltransplants", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchCelltransplantsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchCelltransplantsRequest"}}], "tags": ["ClinicalMetadataService"]}}, "/celltransplants/{celltransplant_id}": {"get": {"summary": "\nGets `Celltransplant` by ID.\n", "operationId": "GetCelltransplant", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghCelltransplant"}}}, "parameters": [{"name": "celltransplant_id", "description": "The ID of the celltransplant requested", "in": "path", "required": true, "type": "string"}], "tags": ["ClinicalMetadataService"]}}, "/chemotherapies/search": {"post": {"summary": "\nGets a list of Chemotherapies accessible through the API.\n", "operationId": "SearchChemotherapies", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchChemotherapiesResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchChemotherapiesRequest"}}], "tags": ["ClinicalMetadataService"]}}, "/chemotherapies/{chemotherapy_id}": {"get": {"summary": "\nGets `Chemotherapy` by ID.\n", "operationId": "GetChemotherapy", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghChemotherapy"}}}, "parameters": [{"name": "chemotherapy_id", "description": "The ID of the chemotherapy requested", "in": "path", "required": true, "type": "string"}], "tags": ["ClinicalMetadataService"]}}, "/complications/search": {"post": {"summary": "\nGets a list of Complications accessible through the API.\n", "operationId": "SearchComplications", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchComplicationsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchComplicationsRequest"}}], "tags": ["ClinicalMetadataService"]}}, "/complications/{complication_id}": {"get": {"summary": "\nGets `Complication` by ID.\n", "operationId": "GetComplication", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghComplication"}}}, "parameters": [{"name": "complication_id", "description": "The ID of the complication requested", "in": "path", "required": true, "type": "string"}], "tags": ["ClinicalMetadataService"]}}, "/consents/search": {"post": {"summary": "\nGets a list of Consents accessible through the API.\n", "operationId": "SearchConsents", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchConsentsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchConsentsRequest"}}], "tags": ["ClinicalMetadataService"]}}, "/consents/{consent_id}": {"get": {"summary": "\nGets `Consent` by ID.\n", "operationId": "GetConsent", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghConsent"}}}, "parameters": [{"name": "consent_id", "description": "The ID of the consent requested", "in": "path", "required": true, "type": "string"}], "tags": ["ClinicalMetadataService"]}}, "/diagnoses/search": {"post": {"summary": "\nGets a list of Diagnoses accessible through the API.\n", "operationId": "SearchDiagnoses", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchDiagnosesResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchDiagnosesRequest"}}], "tags": ["ClinicalMetadataService"]}}, "/diagnoses/{diagnosis_id}": {"get": {"summary": "\nGets `Diagnosis` by ID.\n", "operationId": "GetDiagnosis", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghDiagnosis"}}}, "parameters": [{"name": "diagnosis_id", "description": "The ID of the diagnosis requested", "in": "path", "required": true, "type": "string"}], "tags": ["ClinicalMetadataService"]}}, "/enrollments/search": {"post": {"summary": "\nGets a list of Enrollments accessible through the API.\n", "operationId": "SearchEnrollments", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchEnrollmentsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchEnrollmentsRequest"}}], "tags": ["ClinicalMetadataService"]}}, "/enrollments/{enrollment_id}": {"get": {"summary": "\nGets `Enrollment` by ID.\n", "operationId": "GetEnrollment", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghEnrollment"}}}, "parameters": [{"name": "enrollment_id", "description": "The ID of the enrollment requested", "in": "path", "required": true, "type": "string"}], "tags": ["ClinicalMetadataService"]}}, "/immunotherapies/search": {"post": {"summary": "\nGets a list of Immunotherapies accessible through the API.\n", "operationId": "SearchImmunotherapies", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchImmunotherapiesResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchImmunotherapiesRequest"}}], "tags": ["ClinicalMetadataService"]}}, "/immunotherapies/{immunotherapy_id}": {"get": {"summary": "\nGets `Immunotherapy` by ID.\n", "operationId": "GetImmunotherapy", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghImmunotherapy"}}}, "parameters": [{"name": "immunotherapy_id", "description": "The ID of the immunotherapy requested", "in": "path", "required": true, "type": "string"}], "tags": ["ClinicalMetadataService"]}}, "/labtests/search": {"post": {"summary": "\nGets a list of Labtests accessible through the API.\n", "operationId": "SearchLabtests", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchLabtestsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchLabtestsRequest"}}], "tags": ["ClinicalMetadataService"]}}, "/labtests/{labtest_id}": {"get": {"summary": "\nGets `Labtest` by ID.\n", "operationId": "GetLabtest", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghLabtest"}}}, "parameters": [{"name": "labtest_id", "description": "The ID of the labtest requested", "in": "path", "required": true, "type": "string"}], "tags": ["ClinicalMetadataService"]}}, "/outcomes/search": {"post": {"summary": "\nGets a list of Outcomes accessible through the API.\n", "operationId": "SearchOutcomes", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchOutcomesResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchOutcomesRequest"}}], "tags": ["ClinicalMetadataService"]}}, "/outcomes/{outcome_id}": {"get": {"summary": "\nGets `Outcome` by ID.\n", "operationId": "GetOutcome", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghOutcome"}}}, "parameters": [{"name": "outcome_id", "description": "The ID of the outcome requested", "in": "path", "required": true, "type": "string"}], "tags": ["ClinicalMetadataService"]}}, "/patients/search": {"post": {"summary": "\nGets a list of Patients accessible through the API.\n", "operationId": "SearchPatients", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchPatientsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchPatientsRequest"}}], "tags": ["ClinicalMetadataService"]}}, "/patients/{patient_id}": {"get": {"summary": "\nGets `Patient` by ID.\n", "operationId": "GetPatient", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghPatient"}}}, "parameters": [{"name": "patient_id", "description": "The ID of the patient requested", "in": "path", "required": true, "type": "string"}], "tags": ["ClinicalMetadataService"]}}, "/radiotherapies/search": {"post": {"summary": "\nGets a list of Radiotherapies accessible through the API.\n", "operationId": "SearchRadiotherapies", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchRadiotherapiesResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchRadiotherapiesRequest"}}], "tags": ["ClinicalMetadataService"]}}, "/radiotherapies/{radiotherapy_id}": {"get": {"summary": "\nGets `Radiotherapy` by ID.\n", "operationId": "GetRadiotherapy", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghRadiotherapy"}}}, "parameters": [{"name": "radiotherapy_id", "description": "The ID of the radiotherapy requested", "in": "path", "required": true, "type": "string"}], "tags": ["ClinicalMetadataService"]}}, "/samples/search": {"post": {"summary": "\nGets a list of Samples accessible through the API.\n", "operationId": "SearchSamples", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchSamplesResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchSamplesRequest"}}], "tags": ["ClinicalMetadataService"]}}, "/samples/{sample_id}": {"get": {"summary": "\nGets `Sample` by ID.\n", "operationId": "GetSample", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSample"}}}, "parameters": [{"name": "sample_id", "description": "The ID of the sample requested", "in": "path", "required": true, "type": "string"}], "tags": ["ClinicalMetadataService"]}}, "/slides/search": {"post": {"summary": "\nGets a list of Slides accessible through the API.\n", "operationId": "SearchSlides", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchSlidesResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchSlidesRequest"}}], "tags": ["ClinicalMetadataService"]}}, "/slides/{slide_id}": {"get": {"summary": "\nGets `Slide` by ID.\n", "operationId": "GetSlide", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSlide"}}}, "parameters": [{"name": "slide_id", "description": "The ID of the slide requested", "in": "path", "required": true, "type": "string"}], "tags": ["ClinicalMetadataService"]}}, "/studies/search": {"post": {"summary": "\nGets a list of Studies accessible through the API.\n", "operationId": "SearchStudies", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchStudiesResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchStudiesRequest"}}], "tags": ["ClinicalMetadataService"]}}, "/studies/{study_id}": {"get": {"summary": "\nGets `Study` by ID.\n", "operationId": "GetStudy", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghStudy"}}}, "parameters": [{"name": "study_id", "description": "The ID of the study requested", "in": "path", "required": true, "type": "string"}], "tags": ["ClinicalMetadataService"]}}, "/surgeries/search": {"post": {"summary": "\nGets a list of Surgeries accessible through the API.\n", "operationId": "SearchSurgeries", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchSurgeriesResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchSurgeriesRequest"}}], "tags": ["ClinicalMetadataService"]}}, "/surgeries/{surgery_id}": {"get": {"summary": "\nGets `Surgery` by ID.\n", "operationId": "GetSurgery", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSurgery"}}}, "parameters": [{"name": "surgery_id", "description": "The ID of the surgery requested", "in": "path", "required": true, "type": "string"}], "tags": ["ClinicalMetadataService"]}}, "/treatments/search": {"post": {"summary": "\nGets a list of Treatments accessible through the API.\n", "operationId": "SearchTreatments", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchTreatmentsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchTreatmentsRequest"}}], "tags": ["ClinicalMetadataService"]}}, "/treatments/{treatment_id}": {"get": {"summary": "\nGets `Treatment` by ID.\n", "operationId": "GetTreatment", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghTreatment"}}}, "parameters": [{"name": "treatment_id", "description": "The ID of the treatment requested", "in": "path", "required": true, "type": "string"}], "tags": ["ClinicalMetadataService"]}}, "/tumourboards/search": {"post": {"summary": "\nGets a list of Tumourboards accessible through the API.\n", "operationId": "SearchTumourboards", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchTumourboardsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchTumourboardsRequest"}}], "tags": ["ClinicalMetadataService"]}}, "/tumourboards/{tumourboard_id}": {"get": {"summary": "\nGets `Tumourboard` by ID.\n", "operationId": "GetTumourboard", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghTumourboard"}}}, "parameters": [{"name": "tumourboard_id", "description": "The ID of the tumourboard requested", "in": "path", "required": true, "type": "string"}], "tags": ["ClinicalMetadataService"]}}, "/alignments/search": {"post": {"summary": "Gets a list of Alignments accessible through the API.", "operationId": "SearchAlignments", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchAlignmentsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchAlignmentsRequest"}}], "tags": ["PipelineMetadataService"]}}, "/alignments/{alignment_id}": {"get": {"summary": "Gets `Alignment` by ID.", "operationId": "GetAlignment", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghAlignment"}}}, "parameters": [{"name": "alignment_id", "description": "The ID of the alignment requested", "in": "path", "required": true, "type": "string"}], "tags": ["PipelineMetadataService"]}}, "/expressionanalysis/search": {"post": {"summary": "Gets a list of ExpressionAnalysis metadata accessible through the API.", "operationId": "SearchExpressionAnalysis", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchExpressionAnalysisResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchExpressionAnalysisRequest"}}], "tags": ["PipelineMetadataService"]}}, "/expressionanalysis/{expressionanalysis_id}": {"get": {"summary": "Gets `ExpressionAnalysis` by ID.", "operationId": "GetExpressionAnalysis", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghExpressionAnalysis"}}}, "parameters": [{"name": "expressionanalysis_id", "description": "The ID of the expressionanalysis requested", "in": "path", "required": true, "type": "string"}], "tags": ["PipelineMetadataService"]}}, "/extractions/search": {"post": {"summary": "Gets a list of Extractions accessible through the API.", "operationId": "SearchExtractions", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchExtractionsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchExtractionsRequest"}}], "tags": ["PipelineMetadataService"]}}, "/extractions/{extraction_id}": {"get": {"summary": "Gets `Extraction` by ID.", "operationId": "GetExtraction", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghExtraction"}}}, "parameters": [{"name": "extraction_id", "description": "The ID of the patient requested", "in": "path", "required": true, "type": "string"}], "tags": ["PipelineMetadataService"]}}, "/fusiondetection/{fusiondetection_id}": {"get": {"summary": "Gets `FusionDetection` by ID.", "operationId": "GetFusionDetection", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghFusionDetection"}}}, "parameters": [{"name": "fusiondetection_id", "description": "The ID of the fusion/sv detection requested", "in": "path", "required": true, "type": "string"}], "tags": ["PipelineMetadataService"]}}, "/fusiondetections/search": {"post": {"summary": "Gets a list of FusionDetections accessible through the API.", "operationId": "SearchFusionDetections", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchFusionDetectionResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchFusionDetectionRequest"}}], "tags": ["PipelineMetadataService"]}}, "/sequencing/search": {"post": {"summary": "Gets a list of Sequencing metadata accessible through the API.", "operationId": "SearchSequencing", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchSequencingResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchSequencingRequest"}}], "tags": ["PipelineMetadataService"]}}, "/sequencing/{sequencing_id}": {"get": {"summary": "Gets `Sequencing` by ID.", "operationId": "GetSequencing", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSequencing"}}}, "parameters": [{"name": "sequencing_id", "description": "The ID of the sequencing requested", "in": "path", "required": true, "type": "string"}], "tags": ["PipelineMetadataService"]}}, "/variantcalling/search": {"post": {"summary": "Gets a list of VariantCalling metadata accessible through the API.", "operationId": "SearchVariantCalling", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchVariantCallingResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchVariantCallingRequest"}}], "tags": ["PipelineMetadataService"]}}, "/variantcalling/{variantcalling_id}": {"get": {"summary": "Gets `VariantCalling` by ID.", "operationId": "GetVariantCalling", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghVariantCalling"}}}, "parameters": [{"name": "variantcalling_id", "description": "The ID of the variant calling requested", "in": "path", "required": true, "type": "string"}], "tags": ["PipelineMetadataService"]}}, "/readgroupsets/search": {"post": {"summary": "Gets a list of `ReadGroupSet` matching the search criteria.", "description": "`POST /readgroupsets/search` must accept a JSON version of\n`SearchReadGroupSetsRequest` as the post body and will return a JSON\nversion of `SearchReadGroupSetsResponse` . Only readgroups that\nmatch an optionally supplied biosampleId will be included in the\nresponse.", "operationId": "SearchReadGroupSets", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchReadGroupSetsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchReadGroupSetsRequest"}}], "tags": ["ReadService"]}}, "/readgroupsets/{read_group_set_id}": {"get": {"summary": "Gets a `ReadGroupSet` by ID.", "description": "`GET /readgroupsets/{read_group_set_id}` will return a JSON version of\n`ReadGroupSet`.", "operationId": "GetReadGroupSet", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghReadGroupSet"}}}, "parameters": [{"name": "read_group_set_id", "description": "The ID of the `ReadGroupSet` to be retrieved.", "in": "path", "required": true, "type": "string"}], "tags": ["ReadService"]}}, "/reads/search": {"post": {"summary": "Gets a list of `ReadAlignment` s for one or more `ReadGroup` s.", "description": "`searchReads` operates over a genomic coordinate space of reference sequence\nand position defined by the `Reference` s to which the requested `ReadGroup` s are\naligned.\n\nIf a target positional range is specified, search returns all reads whose\nalignment to the reference genome *overlap* the range. A query which specifies\nonly read group IDs yields all reads in those read groups, including unmapped\nreads.\n\nAll reads returned (including reads on subsequent pages) are ordered by genomic\ncoordinate (by reference sequence, then position). Reads with equivalent genomic\ncoordinates are returned in an unspecified order. This order must be consistent\nfor a given repository, such that two queries for the same content (regardless\nof page size) yield reads in the same order across their respective streams of\npaginated responses.\n\n`POST /reads/search` must accept a JSON version of `SearchReadsRequest` as\nthe post body and will return a JSON version of `SearchReadsResponse`.", "operationId": "SearchReads", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchReadsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchReadsRequest"}}], "tags": ["ReadService"]}}, "/references/search": {"post": {"summary": "Gets a list of `Reference` matching the search criteria.", "description": "`POST /references/search` must accept a JSON version of\n`SearchReferencesRequest` as the post body and will return a JSON\nversion of `SearchReferencesResponse`.", "operationId": "SearchReferences", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchReferencesResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchReferencesRequest"}}], "tags": ["ReferenceService"]}}, "/references/{reference_id}": {"get": {"summary": "Gets a `Reference` by ID.", "description": "`GET /references/{reference_id}` will return a JSON version of\n`Reference`.", "operationId": "GetReference", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghReference"}}}, "parameters": [{"name": "reference_id", "description": "The ID of the `Reference` to be retrieved.", "in": "path", "required": true, "type": "string"}], "tags": ["ReferenceService"]}}, "/references/{reference_id}/bases": {"post": {"summary": "Lists `Reference` bases by ID and optional range.", "description": "`POST /listreferencebases` will return a JSON version of\n`ListReferenceBasesResponse`.", "operationId": "ListReferenceBases", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghListReferenceBasesResponse"}}}, "parameters": [{"name": "reference_id", "description": "The ID of the `Reference` to be retrieved.", "in": "path", "required": true, "type": "string"}, {"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghListReferenceBasesRequest"}}], "tags": ["ReferenceService"]}}, "/referencesets/search": {"post": {"summary": "Gets a list of `ReferenceSet` matching the search criteria.", "description": "`POST /referencesets/search` must accept a JSON version of\n`SearchReferenceSetsRequest` as the post body and will return a JSON\nversion of `SearchReferenceSetsResponse`.", "operationId": "SearchReferenceSets", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchReferenceSetsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchReferenceSetsRequest"}}], "tags": ["ReferenceService"]}}, "/referencesets/{reference_set_id}": {"get": {"summary": "Gets a `ReferenceSet` by ID.", "description": "`GET /referencesets/{reference_set_id}` will return a JSON version of\n`ReferenceSet`.", "operationId": "GetReferenceSet", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghReferenceSet"}}}, "parameters": [{"name": "reference_set_id", "description": "The ID of the `ReferenceSet` to be retrieved.", "in": "path", "required": true, "type": "string"}], "tags": ["ReferenceService"]}}, "/search": {"post": {"operationId": "GetItem", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchQueryResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchQueryRequest"}}], "tags": ["SearchService"]}}, "/count": {"post": {"operationId": "GetCount", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchQueryResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchQueryRequest"}}], "tags": ["SearchService"]}}, "/expressionlevels/search": {"post": {"summary": "'POST /expressionlevels/search' must accept JSON version of\n'SearchExpressionLevelsRequest' as the post body and will return a JSON\nversion of 'SearchExpressionLevelsResponse'.", "operationId": "SearchExpressionLevels", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchExpressionLevelsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchExpressionLevelsRequest"}}], "tags": ["RnaQuantificationService"]}}, "/expressionlevels/{expression_level_id}": {"get": {"summary": "Gets a `ExpressionLevel` by ID.\n`GET /expressionlevels/{id}` will return a JSON version of\n`ExpressionLevel`.", "operationId": "GetExpressionLevel", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghExpressionLevel"}}}, "parameters": [{"name": "expression_level_id", "description": "The ID of the `ExpressionLevel`.", "in": "path", "required": true, "type": "string"}], "tags": ["RnaQuantificationService"]}}, "/rnaquantifications/search": {"post": {"summary": "Gets a list of 'RnaQuantification' matching the search criteria.\n'POST /rnaquantifications/search' must accept JSON version of\n'SearchRnaQuantificationsRequest' as the post body and will return a JSON\nversion of 'SearchRnaQuantificationResponse'.", "operationId": "SearchRnaQuantifications", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchRnaQuantificationsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchRnaQuantificationsRequest"}}], "tags": ["RnaQuantificationService"]}}, "/rnaquantifications/{rna_quantification_id}": {"get": {"summary": "Gets a `RnaQuantification` by ID.\n`GET /rnaquantifications/{id}` will return a JSON version of\n`RnaQuantification`.", "operationId": "GetRnaQuantification", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghRnaQuantification"}}}, "parameters": [{"name": "rna_quantification_id", "description": "The ID of the `RnaQuantification`.", "in": "path", "required": true, "type": "string"}], "tags": ["RnaQuantificationService"]}}, "/rnaquantificationsets/search": {"post": {"summary": "Gets a list of 'RnaQuantificationSet' matching the search criteria.\n'POST /rnaquantificationsets/search' must accept JSON version of\n'SearchRnaQuantificationSetRequest' as the post body and will return a JSON\nversion of 'SearchRnaQuantificationSetResponse'.", "operationId": "SearchRnaQuantificationSets", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchRnaQuantificationSetsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchRnaQuantificationSetsRequest"}}], "tags": ["RnaQuantificationService"]}}, "/rnaquantificationsets/{rna_quantification_set_id}": {"get": {"summary": "Gets a `RnaQuantificationSet` by ID.\n`GET /rnaquantificationsets/{id}` will return a JSON version of\n`RnaQuantificationSet`.", "operationId": "GetRnaQuantificationSet", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghRnaQuantificationSet"}}}, "parameters": [{"name": "rna_quantification_set_id", "description": "The ID of the `RnaQuantificationSet`.", "in": "path", "required": true, "type": "string"}], "tags": ["RnaQuantificationService"]}}, "/features/search": {"post": {"summary": "Gets a list of `Feature` matching the search criteria.", "description": "`POST /features/search` must accept a JSON version of\n`SearchFeaturesRequest` as the post body and will return a JSON version of\n`SearchFeaturesResponse`.", "operationId": "SearchFeatures", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchFeaturesResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchFeaturesRequest"}}], "tags": ["SequenceAnnotationService"]}}, "/features/{feature_id}": {"get": {"summary": "Gets a `Feature` by ID.", "description": "`GET /features/{id}` will return a JSON version of `Feature`.", "operationId": "GetFeature", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghFeature"}}}, "parameters": [{"name": "feature_id", "description": "The ID of the `Feature` to be retrieved.", "in": "path", "required": true, "type": "string"}], "tags": ["SequenceAnnotationService"]}}, "/featuresets/search": {"post": {"summary": "Gets a list of `FeatureSet` matching the search criteria.", "description": "`POST /featuresets/search` must accept a JSON version of\n`SearchFeatureSetsRequest` as the post body and will return a JSON version\nof `SearchFeatureSetsResponse`.", "operationId": "SearchFeatureSets", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchFeatureSetsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchFeatureSetsRequest"}}], "tags": ["SequenceAnnotationService"]}}, "/featuresets/{feature_set_id}": {"get": {"summary": "Gets a `FeatureSet` by ID.", "description": "`GET /featuresets/{id}` will return a JSON version of `FeatureSet`.", "operationId": "GetFeatureSet", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghFeatureSet"}}}, "parameters": [{"name": "feature_set_id", "description": "The ID of the `FeatureSet` to be retrieved.", "in": "path", "required": true, "type": "string"}], "tags": ["SequenceAnnotationService"]}}, "/continuous/search": {"post": {"summary": "Gets continuous values matching the search criteria.", "description": "`POST /continuous/search` must accept a JSON version of\n`SearchContinuousRequest` as the post body and will return a JSON version\nof `SearchContinuousResponse`.", "operationId": "SearchContinuous", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchContinuousResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchContinuousRequest"}}], "tags": ["SequenceAnnotationService"]}}, "/continuoussets/search": {"post": {"summary": "Gets a list of `ContinuousSet` matching the search criteria.", "description": "`POST /continuoussets/search` must accept a JSON version of\n`SearchContinuousSetsRequest` as the post body and will return a JSON\nversion of `SearchContinuousSetsResponse`.", "operationId": "SearchContinuousSets", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchContinuousSetsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchContinuousSetsRequest"}}], "tags": ["SequenceAnnotationService"]}}, "/continuoussets/{continuous_set_id}": {"get": {"summary": "Gets a `ContinuousSet` by ID.", "description": "`GET /continuoussets/{id}` will return a JSON version of `ContinuousSet`.", "operationId": "GetContinuousSet", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghContinuousSet"}}}, "parameters": [{"name": "continuous_set_id", "description": "The ID of the `ContinuousSet` to be retrieved.", "in": "path", "required": true, "type": "string"}], "tags": ["SequenceAnnotationService"]}}, "/callsets/search": {"post": {"summary": "Gets a list of call sets matching the search criteria.", "description": "`POST /callsets/search` must accept a JSON version of\n`SearchCallSetsRequest` as the post body and will return a JSON version of\n`SearchCallSetsResponse`.", "operationId": "SearchCallSets", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchCallSetsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchCallSetsRequest"}}], "tags": ["VariantService"]}}, "/callsets/{call_set_id}": {"get": {"summary": "Gets a `CallSet` by ID.", "description": "`GET /callsets/{id}` will return a JSON version of `CallSet`.", "operationId": "GetCallSet", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghCallSet"}}}, "parameters": [{"name": "call_set_id", "description": "The ID of the `CallSet` to be retrieved.", "in": "path", "required": true, "type": "string"}], "tags": ["VariantService"]}}, "/variants/search": {"post": {"summary": "Gets a list of `Variant` matching the search criteria.", "description": "`POST /variants/search` must accept a JSON version of\n`SearchVariantsRequest` as the post body and will return a JSON version of\n`SearchVariantsResponse`.", "operationId": "SearchVariants", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchVariantsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchVariantsRequest"}}], "tags": ["VariantService"]}}, "/variants/{variant_id}": {"post": {"summary": "Gets a `Variant` by ID.", "description": "`GET /variants/{id}` will return a JSON version of `Variant`.", "operationId": "GetVariant", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghVariant"}}}, "parameters": [{"name": "variant_id", "description": "The ID of the `Variant` to be retrieved.", "in": "path", "required": true, "type": "string"}], "tags": ["VariantService"]}}, "/variantsbygenesearch": {"post": {"summary": "Gets a list of `Variants` matching the search criteria.", "description": "`POST /variantsetsByGeneName/search` must accept a JSON version of\n`SearchVariantsByGeneNameRequest` as the post body and will return a JSON version\nof `SearchVariantsByGeneNameResponse`.", "operationId": "SearchVariantsByGeneName", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchVariantsByGeneNameResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchVariantsByGeneNameRequest"}}], "tags": ["VariantService"]}}, "/variantsets/search": {"post": {"summary": "Gets a list of `VariantSet` matching the search criteria.", "description": "`POST /variantsets/search` must accept a JSON version of\n`SearchVariantSetsRequest` as the post body and will return a JSON version\nof `SearchVariantSetsResponse`.", "operationId": "SearchVariantSets", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghSearchVariantSetsResponse"}}}, "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ga4ghSearchVariantSetsRequest"}}], "tags": ["VariantService"]}}, "/variantsets/{variant_set_id}": {"get": {"summary": "Gets a `VariantSet` by ID.", "description": "`GET /variantsets/{variant_set_id}` will return a JSON version of\n`VariantSet`.", "operationId": "GetVariantSet", "responses": {"200": {"description": "A successful response.", "schema": {"$ref": "#/definitions/ga4ghVariantSet"}}}, "parameters": [{"name": "variant_set_id", "description": "The ID of the `VariantSet` to be retrieved.", "in": "path", "required": true, "type": "string"}], "tags": ["VariantService"]}}}, "definitions": {"ga4ghAnalysis": {"type": "object", "properties": {"id": {"type": "string", "description": "Formats of id | name | description | accessions are described in the\ndocumentation on general attributes and formats."}, "name": {"type": "string"}, "description": {"type": "string"}, "created": {"type": "string", "description": "The time at which this record was created, in ISO 8601 format."}, "updated": {"type": "string", "description": "The time at which this record was last updated, in ISO 8601 format."}, "type": {"type": "string", "description": "The type of analysis."}, "software": {"type": "array", "items": {"type": "string"}, "description": "The software run to generate this analysis."}, "dataset_id": {"type": "string", "description": "### ===================================================================== ###\n# PROFYLE MODIFICATION BEGIN\n### ===================================================================== ###\nThe ID of the dataset this Analysis belongs to."}, "experiment_id": {"type": "string", "title": "Experiment id that is corresponding to the analysis: string"}, "other_analysis_descriptor": {"type": "string", "title": "other_analysis_descriptor: string"}, "other_analysis_completition_date": {"type": "string", "title": "other_analysis_completition_date: date (YYYY-MM-DD)"}}, "description": "An analysis contains an interpretation of one or several experiments. (e.g.\nSNVs, copy number variations, methylation status) together with information\nabout the methodology used."}, "ga4ghAttributeValue": {"type": "object", "properties": {"string_value": {"type": "string"}, "int64_value": {"type": "string", "format": "int64"}, "int32_value": {"type": "integer", "format": "int32"}, "bool_value": {"type": "boolean", "format": "boolean"}, "double_value": {"type": "number", "format": "double"}, "external_identifier": {"$ref": "#/definitions/ga4ghExternalIdentifier"}, "ontology_term": {"$ref": "#/definitions/ga4ghOntologyTerm"}, "experiment": {"$ref": "#/definitions/ga4ghExperiment"}, "program": {"$ref": "#/definitions/ga4ghProgram"}, "analysis": {"$ref": "#/definitions/ga4ghAnalysis"}, "null_value": {"$ref": "#/definitions/ga4ghNullValue"}, "attribute_list": {"$ref": "#/definitions/ga4ghAttributeValueList"}}, "description": "Type defining a collection of attributes associated with various protocol\nrecords. Each attribute is a name that maps to an array of one or more\nvalues. Values are chosen from both internal protobuf types and GA4GH.\n Values should be split into array elements instead of using a separator\nsyntax that needs to parsed."}, "ga4ghAttributeValueList": {"type": "object", "properties": {"values": {"type": "array", "items": {"$ref": "#/definitions/ga4ghAttributeValue"}}}}, "ga4ghAttributes": {"type": "object", "properties": {"attr": {"type": "object", "additionalProperties": {"$ref": "#/definitions/ga4ghAttributeValueList"}}}}, "ga4ghDataset": {"type": "object", "properties": {"id": {"type": "string", "description": "The dataset's id, locally unique to the server instance."}, "name": {"type": "string", "description": "The name of the dataset."}, "description": {"type": "string", "description": "Additional, human-readable information on the dataset."}}, "description": "A Dataset is a collection of related data of multiple types.\nData providers decide how to group data into datasets.\nSee [Metadata API](../api/metadata.html) for a more detailed discussion."}, "ga4ghExperiment": {"type": "object", "properties": {"id": {"type": "string", "title": "The experiment ID"}, "name": {"type": "string", "description": "The name of the experiment."}, "description": {"type": "string", "description": "A description of the experiment."}, "message_create_time": {"type": "string", "title": "The time at which this message was created.\nFormat: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)"}, "message_update_time": {"type": "string", "title": "The time at which this message was last updated.\nFormat: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)"}, "run_time": {"type": "string", "title": "The time at which this experiment was performed.\nGranularity here is variable (e.g. date only).\nFormat: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)"}, "molecule": {"type": "string", "title": "The molecule examined in this experiment. (e.g. genomics DNA, total RNA)"}, "strategy": {"type": "string", "title": "The experiment technique or strategy applied to the sample.\n(e.g. whole genome sequencing, RNA-seq, RIP-seq)"}, "selection": {"type": "string", "title": "The method used to enrich the target. (e.g. immunoprecipitation, size\nfractionation, MNase digestion)"}, "library": {"type": "string", "description": "The name of the library used as part of this experiment."}, "library_layout": {"type": "string", "description": "The configuration of sequenced reads. (e.g. Single or Paired)."}, "instrument_model": {"type": "string", "description": "The instrument model used as part of this experiment.\nThis maps to sequencing technology in BAM."}, "instrument_data_file": {"type": "string", "title": "The data file generated by the instrument.\nTODO: This isn't actually a file is it?\nShould this be `instrumentData` instead?"}, "sequencing_center": {"type": "string", "description": "The sequencing center used as part of this experiment."}, "platform_unit": {"type": "string", "description": "The platform unit used as part of this experiment. This is a\nflowcell-barcode\nor slide unique identifier."}, "dataset_id": {"type": "string", "description": "### ===================================================================== ###\n# PROFYLE MODIFICATION BEGIN\n### ===================================================================== ###\nThe ID of the dataset this Experiment belongs to."}, "biosample_id": {"type": "string", "title": "Biosample id on which the experiment was done: string"}, "dna_library_construction_method": {"type": "string", "title": "dna_library_construction_method: string"}, "wgs_sequencing_completion_date": {"type": "string", "title": "wgs_sequencing_completion_date: date (YYYY-MM-DD)"}, "rna_library_construction_method": {"type": "string", "title": "RNA Library Construction Method"}, "rna_sequencing_completion_date": {"type": "string", "title": "wgs_sequencing_completion_date: date (YYYY-MM-DD)"}, "panel_completion_date": {"type": "string", "title": "panel_completion_date: date (YYYY-MM-DD)"}}, "description": "An experimental preparation of a sample."}, "ga4ghExternalIdentifier": {"type": "object", "properties": {"database": {"type": "string", "description": "The source of the identifier, e.g. `Ensembl`."}, "identifier": {"type": "string", "description": "The ID defined by the external database, e.g. `ENST00000000000`."}, "version": {"type": "string", "description": "The version of the object or the database, e.g. `78`."}}, "title": "Identifier from a public database"}, "ga4ghNullValue": {"type": "string", "enum": ["NULL_VALUE"], "default": "NULL_VALUE", "description": " - NULL_VALUE: Null value."}, "ga4ghOntologyTerm": {"type": "object", "properties": {"term_id": {"type": "string", "description": "Ontology term identifier - the CURIE for an ontology term. It\ndiffers from the standard GA4GH schema's :ref:`id <apidesign_object_ids>`\nin that it is a CURIE pointing to an information resource outside of the\nscope of the schema or its resource implementation."}, "term": {"type": "string", "description": "Ontology term - the label of the ontology term the termId is pointing to."}}, "title": "An ontology term describing an attribute. (e.g. the phenotype attribute\n'polydactyly' from HPO)"}, "ga4ghProgram": {"type": "object", "properties": {"command_line": {"type": "string", "description": "The command line used to run this program."}, "id": {"type": "string", "description": "The user specified ID of the program."}, "name": {"type": "string", "description": "The name of the program."}, "prev_program_id": {"type": "string", "description": "The ID of the program run before this one."}, "version": {"type": "string", "description": "The version of the program run."}}, "description": "A Program describes software used in data processing or analysis."}, "ga4ghSearchDatasetsRequest": {"type": "object", "properties": {"page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."}}, "description": "This request maps to the body of `POST /datasets/search` as JSON."}, "ga4ghSearchDatasetsResponse": {"type": "object", "properties": {"datasets": {"type": "array", "items": {"$ref": "#/definitions/ga4ghDataset"}, "description": "The list of datasets."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /datasets/search` expressed as JSON."}, "ga4ghCelltransplant": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "patientId": {"type": "string"}, "startDate": {"type": "string"}, "cellSource": {"type": "string"}, "donorType": {"type": "string"}, "treatmentPlanId": {"type": "string"}, "courseNumber": {"type": "string"}}}, "ga4ghChemotherapy": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "patientId": {"type": "string"}, "courseNumber": {"type": "string"}, "startDate": {"type": "string"}, "stopDate": {"type": "string"}, "systematicTherapyAgentName": {"type": "string"}, "route": {"type": "string"}, "dose": {"type": "string"}, "doseFrequency": {"type": "string"}, "doseUnit": {"type": "string"}, "daysPerCycle": {"type": "string"}, "numberOfCycle": {"type": "string"}, "treatmentIntent": {"type": "string"}, "treatingCentreName": {"type": "string"}, "type": {"type": "string"}, "protocolCode": {"type": "string"}, "recordingDate": {"type": "string"}, "treatmentPlanId": {"type": "string"}}}, "ga4ghComplication": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "patientId": {"type": "string"}, "date": {"type": "string"}, "lateComplicationOfTherapyDeveloped": {"type": "string"}, "lateToxicityDetail": {"type": "string"}, "suspectedTreatmentInducedNeoplasmDeveloped": {"type": "string"}, "treatmentInducedNeoplasmDetails": {"type": "string"}}}, "ga4ghConsent": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "patientId": {"type": "string"}, "consentId": {"type": "string"}, "consentDate": {"type": "string"}, "consentVersion": {"type": "string"}, "patientConsentedTo": {"type": "string"}, "reasonForRejection": {"type": "string"}, "wasAssentObtained": {"type": "string"}, "dateOfAssent": {"type": "string"}, "assentFormVersion": {"type": "string"}, "ifAssentNotObtainedWhyNot": {"type": "string"}, "reconsentDate": {"type": "string"}, "reconsentVersion": {"type": "string"}, "consentingCoordinatorName": {"type": "string"}, "previouslyConsented": {"type": "string"}, "nameOfOtherBiobank": {"type": "string"}, "hasConsentBeenWithdrawn": {"type": "string"}, "dateOfConsentWithdrawal": {"type": "string"}, "typeOfConsentWithdrawal": {"type": "string"}, "reasonForConsentWithdrawal": {"type": "string"}, "consentFormComplete": {"type": "string"}}}, "ga4ghDiagnosis": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "patientId": {"type": "string"}, "diagnosisId": {"type": "string"}, "diagnosisDate": {"type": "string"}, "ageAtDiagnosis": {"type": "string"}, "cancerType": {"type": "string"}, "classification": {"type": "string"}, "cancerSite": {"type": "string"}, "histology": {"type": "string"}, "methodOfDefinitiveDiagnosis": {"type": "string"}, "sampleType": {"type": "string"}, "sampleSite": {"type": "string"}, "tumorGrade": {"type": "string"}, "gradingSystemUsed": {"type": "string"}, "sitesOfMetastases": {"type": "string"}, "stagingSystem": {"type": "string"}, "versionOrEditionOfTheStagingSystem": {"type": "string"}, "specificTumorStageAtDiagnosis": {"type": "string"}, "prognosticBiomarkers": {"type": "string"}, "biomarkerQuantification": {"type": "string"}, "additionalMolecularTesting": {"type": "string"}, "additionalTestType": {"type": "string"}, "laboratoryName": {"type": "string"}, "laboratoryAddress": {"type": "string"}, "siteOfMetastases": {"type": "string"}, "stagingSystemVersion": {"type": "string"}, "specificStage": {"type": "string"}, "cancerSpecificBiomarkers": {"type": "string"}, "additionalMolecularDiagnosticTestingPerformed": {"type": "string"}, "additionalTest": {"type": "string"}}}, "ga4ghEnrollment": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "patientId": {"type": "string"}, "enrollmentInstitution": {"type": "string"}, "enrollmentApprovalDate": {"type": "string"}, "crossEnrollment": {"type": "string"}, "otherPersonalizedMedicineStudyName": {"type": "string"}, "otherPersonalizedMedicineStudyId": {"type": "string"}, "ageAtEnrollment": {"type": "string"}, "eligibilityCategory": {"type": "string"}, "statusAtEnrollment": {"type": "string"}, "primaryOncologistName": {"type": "string"}, "primaryOncologistContact": {"type": "string"}, "referringPhysicianName": {"type": "string"}, "referringPhysicianContact": {"type": "string"}, "summaryOfIdRequest": {"type": "string"}, "treatingCentreName": {"type": "string"}, "treatingCentreProvince": {"type": "string"}}}, "ga4ghFilter": {"type": "object", "properties": {"field": {"type": "string", "title": "Name one of the table field on which the filter should be applied"}, "operator": {"type": "string", "title": "Relationship between field and value"}, "value": {"type": "string", "title": "A level of the field content"}, "values": {"type": "array", "items": {"type": "string"}, "title": "List of values to be able to provide multiple possibilities"}}, "title": "Contains a single statement about any field of any of tables"}, "ga4ghImmunotherapy": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "patientId": {"type": "string"}, "startDate": {"type": "string"}, "immunotherapyType": {"type": "string"}, "immunotherapyTarget": {"type": "string"}, "immunotherapyDetail": {"type": "string"}, "treatmentPlanId": {"type": "string"}, "courseNumber": {"type": "string"}}}, "ga4ghLabtest": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "patientId": {"type": "string"}, "startDate": {"type": "string"}, "collectionDate": {"type": "string"}, "endDate": {"type": "string"}, "eventType": {"type": "string"}, "testResults": {"type": "string"}, "timePoint": {"type": "string"}, "recordingDate": {"type": "string"}}}, "ga4ghOutcome": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "patientId": {"type": "string"}, "physicalExamId": {"type": "string"}, "dateOfAssessment": {"type": "string"}, "diseaseResponseOrStatus": {"type": "string"}, "otherResponseClassification": {"type": "string"}, "minimalResidualDiseaseAssessment": {"type": "string"}, "methodOfResponseEvaluation": {"type": "string"}, "responseCriteriaUsed": {"type": "string"}, "summaryStage": {"type": "string"}, "sitesOfAnyProgressionOrRecurrence": {"type": "string"}, "vitalStatus": {"type": "string"}, "height": {"type": "string"}, "weight": {"type": "string"}, "heightUnits": {"type": "string"}, "weightUnits": {"type": "string"}, "performanceStatus": {"type": "string"}, "overallSurvivalInMonths": {"type": "string"}, "diseaseFreeSurvivalInMonths": {"type": "string"}}}, "ga4ghPatient": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "patientId": {"type": "string"}, "otherIds": {"type": "string"}, "dateOfBirth": {"type": "string"}, "gender": {"type": "string"}, "ethnicity": {"type": "string"}, "race": {"type": "string"}, "provinceOfResidence": {"type": "string"}, "dateOfDeath": {"type": "string"}, "causeOfDeath": {"type": "string"}, "autopsyTissueForResearch": {"type": "string"}, "priorMalignancy": {"type": "string"}, "dateOfPriorMalignancy": {"type": "string"}, "familyHistoryAndRiskFactors": {"type": "string"}, "familyHistoryOfPredispositionSyndrome": {"type": "string"}, "detailsOfPredispositionSyndrome": {"type": "string"}, "geneticCancerSyndrome": {"type": "string"}, "otherGeneticConditionOrSignificantComorbidity": {"type": "string"}, "occupationalOrEnvironmentalExposure": {"type": "string"}}}, "ga4ghRadiotherapy": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "patientId": {"type": "string"}, "courseNumber": {"type": "string"}, "startDate": {"type": "string"}, "stopDate": {"type": "string"}, "therapeuticModality": {"type": "string"}, "baseline": {"type": "string"}, "testResult": {"type": "string"}, "testResultStd": {"type": "string"}, "treatingCentreName": {"type": "string"}, "startIntervalRad": {"type": "string"}, "startIntervalRadRaw": {"type": "string"}, "recordingDate": {"type": "string"}, "adjacentFields": {"type": "string"}, "adjacentFractions": {"type": "string"}, "complete": {"type": "string"}, "brachytherapyDose": {"type": "string"}, "radiotherapyDose": {"type": "string"}, "siteNumber": {"type": "string"}, "technique": {"type": "string"}, "treatedRegion": {"type": "string"}, "treatmentPlanId": {"type": "string"}, "radiationType": {"type": "string"}, "radiationSite": {"type": "string"}, "totalDose": {"type": "string"}, "boostSite": {"type": "string"}, "boostDose": {"type": "string"}}}, "ga4ghSample": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "patientId": {"type": "string"}, "sampleId": {"type": "string"}, "diagnosisId": {"type": "string"}, "localBiobankId": {"type": "string"}, "collectionDate": {"type": "string"}, "collectionHospital": {"type": "string"}, "sampleType": {"type": "string"}, "tissueDiseaseState": {"type": "string"}, "anatomicSiteTheSampleObtainedFrom": {"type": "string"}, "cancerType": {"type": "string"}, "cancerSubtype": {"type": "string"}, "pathologyReportId": {"type": "string"}, "morphologicalCode": {"type": "string"}, "topologicalCode": {"type": "string"}, "shippingDate": {"type": "string"}, "receivedDate": {"type": "string"}, "qualityControlPerformed": {"type": "string"}, "estimatedTumorContent": {"type": "string"}, "quantity": {"type": "string"}, "units": {"type": "string"}, "associatedBiobank": {"type": "string"}, "otherBiobank": {"type": "string"}, "sopFollowed": {"type": "string"}, "ifNotExplainAnyDeviation": {"type": "string"}, "recordingDate": {"type": "string"}, "startInterval": {"type": "string"}}}, "ga4ghSearchCelltransplantsRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Celltransplants with the given name found by case-sensitive string matching."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "description": "\nCelltransplant\n\nThis request maps to the body of `POST /celltransplants/search` as JSON."}, "ga4ghSearchCelltransplantsResponse": {"type": "object", "properties": {"celltransplants": {"type": "array", "items": {"$ref": "#/definitions/ga4ghCelltransplant"}, "description": "The list of celltransplants."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /celltransplants/search` expressed as JSON."}, "ga4ghSearchChemotherapiesRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Chemotherapies with the given name found by case-sensitive string matching."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "description": "\nChemotherapy\n\nThis request maps to the body of `POST /chemotherapies/search` as JSON."}, "ga4ghSearchChemotherapiesResponse": {"type": "object", "properties": {"chemotherapies": {"type": "array", "items": {"$ref": "#/definitions/ga4ghChemotherapy"}, "description": "The list of chemotherapies."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /chemotherapies/search` expressed as JSON."}, "ga4ghSearchComplicationsRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Complications with the given name found by case-sensitive string matching."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "description": "\nComplication\n\nThis request maps to the body of `POST /complications/search` as JSON."}, "ga4ghSearchComplicationsResponse": {"type": "object", "properties": {"complications": {"type": "array", "items": {"$ref": "#/definitions/ga4ghComplication"}, "description": "The list of complications."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /complications/search` expressed as JSON."}, "ga4ghSearchConsentsRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Consents with the given name found by case-sensitive string matching."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "description": "\nConsent\n\nThis request maps to the body of `POST /consents/search` as JSON."}, "ga4ghSearchConsentsResponse": {"type": "object", "properties": {"consents": {"type": "array", "items": {"$ref": "#/definitions/ga4ghConsent"}, "description": "The list of consents."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /consents/search` expressed as JSON."}, "ga4ghSearchDiagnosesRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Diagnoses with the given name found by case-sensitive string matching."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "description": "\nDiagnosis\n\nThis request maps to the body of `POST /diagnoses/search` as JSON."}, "ga4ghSearchDiagnosesResponse": {"type": "object", "properties": {"diagnoses": {"type": "array", "items": {"$ref": "#/definitions/ga4ghDiagnosis"}, "description": "The list of diagnoses."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /diagnoses/search` expressed as JSON."}, "ga4ghSearchEnrollmentsRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Enrollments with the given name found by case-sensitive string matching."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "description": "\nEnrollment\n\nThis request maps to the body of `POST /enrollments/search` as JSON."}, "ga4ghSearchEnrollmentsResponse": {"type": "object", "properties": {"enrollments": {"type": "array", "items": {"$ref": "#/definitions/ga4ghEnrollment"}, "description": "The list of enrollments."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /enrollments/search` expressed as JSON."}, "ga4ghSearchImmunotherapiesRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Immunotherapies with the given name found by case-sensitive string matching."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "description": "\nImmunotherapy\n\nThis request maps to the body of `POST /immunotherapies/search` as JSON."}, "ga4ghSearchImmunotherapiesResponse": {"type": "object", "properties": {"immunotherapies": {"type": "array", "items": {"$ref": "#/definitions/ga4ghImmunotherapy"}, "description": "The list of immunotherapies."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /immunotherapies/search` expressed as JSON."}, "ga4ghSearchLabtestsRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Labtests with the given name found by case-sensitive string matching."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "description": "\nLabtest\n\nThis request maps to the body of `POST /labtests/search` as JSON."}, "ga4ghSearchLabtestsResponse": {"type": "object", "properties": {"labtests": {"type": "array", "items": {"$ref": "#/definitions/ga4ghLabtest"}, "description": "The list of labtests."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /labtests/search` expressed as JSON."}, "ga4ghSearchOutcomesRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Outcomes with the given name found by case-sensitive string matching."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "description": "\nOutcome\n\nThis request maps to the body of `POST /outcomes/search` as JSON."}, "ga4ghSearchOutcomesResponse": {"type": "object", "properties": {"outcomes": {"type": "array", "items": {"$ref": "#/definitions/ga4ghOutcome"}, "description": "The list of outcomes."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /outcomes/search` expressed as JSON."}, "ga4ghSearchPatientsRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Patients with the given name found by case-sensitive string matching."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "description": "\nPatient\n\nThis request maps to the body of `POST /patients/search` as JSON."}, "ga4ghSearchPatientsResponse": {"type": "object", "properties": {"patients": {"type": "array", "items": {"$ref": "#/definitions/ga4ghPatient"}, "description": "The list of patients."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /patients/search` expressed as JSON."}, "ga4ghSearchRadiotherapiesRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Radiotherapies with the given name found by case-sensitive string matching."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "description": "\nRadiotherapy\n\nThis request maps to the body of `POST /radiotherapies/search` as JSON."}, "ga4ghSearchRadiotherapiesResponse": {"type": "object", "properties": {"radiotherapies": {"type": "array", "items": {"$ref": "#/definitions/ga4ghRadiotherapy"}, "description": "The list of radiotherapies."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /radiotherapies/search` expressed as JSON."}, "ga4ghSearchSamplesRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Samples with the given name found by case-sensitive string matching."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "description": "\nSample\n\nThis request maps to the body of `POST /samples/search` as JSON."}, "ga4ghSearchSamplesResponse": {"type": "object", "properties": {"samples": {"type": "array", "items": {"$ref": "#/definitions/ga4ghSample"}, "description": "The list of samples."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /samples/search` expressed as JSON."}, "ga4ghSearchSlidesRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Slides with the given name found by case-sensitive string matching."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "description": "\nSlide\n\nThis request maps to the body of `POST /slides/search` as JSON."}, "ga4ghSearchSlidesResponse": {"type": "object", "properties": {"slides": {"type": "array", "items": {"$ref": "#/definitions/ga4ghSlide"}, "description": "The list of slides."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /slides/search` expressed as JSON."}, "ga4ghSearchStudiesRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Studies with the given name found by case-sensitive string matching."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "description": "\nStudy\n\nThis request maps to the body of `POST /studies/search` as JSON."}, "ga4ghSearchStudiesResponse": {"type": "object", "properties": {"studies": {"type": "array", "items": {"$ref": "#/definitions/ga4ghStudy"}, "description": "The list of studies."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /studies/search` expressed as JSON."}, "ga4ghSearchSurgeriesRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Surgeries with the given name found by case-sensitive string matching."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "description": "\nSurgery\n\nThis request maps to the body of `POST /surgeries/search` as JSON."}, "ga4ghSearchSurgeriesResponse": {"type": "object", "properties": {"surgeries": {"type": "array", "items": {"$ref": "#/definitions/ga4ghSurgery"}, "description": "The list of surgeries."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /surgeries/search` expressed as JSON."}, "ga4ghSearchTreatmentsRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Treatments with the given name found by case-sensitive string matching."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "description": "\nTreatment\n\nThis request maps to the body of `POST /treatments/search` as JSON."}, "ga4ghSearchTreatmentsResponse": {"type": "object", "properties": {"treatments": {"type": "array", "items": {"$ref": "#/definitions/ga4ghTreatment"}, "description": "The list of treatments."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /treatments/search` expressed as JSON."}, "ga4ghSearchTumourboardsRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Tumourboards with the given name found by case-sensitive string matching."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "description": "\nTumourboard\n\nThis request maps to the body of `POST /tumourboards/search` as JSON."}, "ga4ghSearchTumourboardsResponse": {"type": "object", "properties": {"tumourboards": {"type": "array", "items": {"$ref": "#/definitions/ga4ghTumourboard"}, "description": "The list of tumourboards."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /tumourboards/search` expressed as JSON."}, "ga4ghSlide": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "patientId": {"type": "string"}, "sampleId": {"type": "string"}, "slideId": {"type": "string"}, "slideOtherId": {"type": "string"}, "lymphocyteInfiltrationPercent": {"type": "string"}, "tumorNucleiPercent": {"type": "string"}, "monocyteInfiltrationPercent": {"type": "string"}, "normalCellsPercent": {"type": "string"}, "tumorCellsPercent": {"type": "string"}, "stromalCellsPercent": {"type": "string"}, "eosinophilInfiltrationPercent": {"type": "string"}, "neutrophilInfiltrationPercent": {"type": "string"}, "granulocyteInfiltrationPercent": {"type": "string"}, "necrosisPercent": {"type": "string"}, "inflammatoryInfiltrationPercent": {"type": "string"}, "proliferatingCellsNumber": {"type": "string"}, "sectionLocation": {"type": "string"}}}, "ga4ghStudy": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "patientId": {"type": "string"}, "startDate": {"type": "string"}, "endDate": {"type": "string"}, "status": {"type": "string"}, "recordingDate": {"type": "string"}}}, "ga4ghSurgery": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "patientId": {"type": "string"}, "startDate": {"type": "string"}, "stopDate": {"type": "string"}, "sampleId": {"type": "string"}, "collectionTimePoint": {"type": "string"}, "diagnosisDate": {"type": "string"}, "site": {"type": "string"}, "type": {"type": "string"}, "recordingDate": {"type": "string"}, "treatmentPlanId": {"type": "string"}, "courseNumber": {"type": "string"}}}, "ga4ghTreatment": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "patientId": {"type": "string"}, "courseNumber": {"type": "string"}, "therapeuticModality": {"type": "string"}, "treatmentPlanType": {"type": "string"}, "treatmentIntent": {"type": "string"}, "startDate": {"type": "string"}, "stopDate": {"type": "string"}, "reasonForEndingTheTreatment": {"type": "string"}, "responseToTreatment": {"type": "string"}, "responseCriteriaUsed": {"type": "string"}, "dateOfRecurrenceOrProgressionAfterThisTreatment": {"type": "string"}, "unexpectedOrUnusualToxicityDuringTreatment": {"type": "string"}, "diagnosisId": {"type": "string"}, "treatmentPlanId": {"type": "string"}}}, "ga4ghTumourboard": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "patientId": {"type": "string"}, "dateOfMolecularTumorBoard": {"type": "string"}, "typeOfSampleAnalyzed": {"type": "string"}, "typeOfTumourSampleAnalyzed": {"type": "string"}, "analysesDiscussed": {"type": "string"}, "somaticSampleType": {"type": "string"}, "normalExpressionComparator": {"type": "string"}, "diseaseExpressionComparator": {"type": "string"}, "hasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer": {"type": "string"}, "actionableTargetFound": {"type": "string"}, "molecularTumorBoardRecommendation": {"type": "string"}, "germlineDnaSampleId": {"type": "string"}, "tumorDnaSampleId": {"type": "string"}, "tumorRnaSampleId": {"type": "string"}, "germlineSnvDiscussed": {"type": "string"}, "somaticSnvDiscussed": {"type": "string"}, "cnvsDiscussed": {"type": "string"}, "structuralVariantDiscussed": {"type": "string"}, "classificationOfVariants": {"type": "string"}, "clinicalValidationProgress": {"type": "string"}, "typeOfValidation": {"type": "string"}, "agentOrDrugClass": {"type": "string"}, "levelOfEvidenceForExpressionTargetAgentMatch": {"type": "string"}, "didTreatmentPlanChangeBasedOnProfilingResult": {"type": "string"}, "howTreatmentHasAlteredBasedOnProfiling": {"type": "string"}, "reasonTreatmentPlanDidNotChangeBasedOnProfiling": {"type": "string"}, "detailsOfTreatmentPlanImpact": {"type": "string"}, "patientOrFamilyInformedOfGermlineVariant": {"type": "string"}, "patientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling": {"type": "string"}, "summaryReport": {"type": "string"}}}, "ga4ghAlignment": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "sampleId": {"type": "string"}, "inHousePipeline": {"type": "string"}, "alignmentTool": {"type": "string"}, "mergeTool": {"type": "string"}, "markDuplicates": {"type": "string"}, "realignerTarget": {"type": "string"}, "indelRealigner": {"type": "string"}, "baseRecalibrator": {"type": "string"}, "printReads": {"type": "string"}, "idxStats": {"type": "string"}, "flagStat": {"type": "string"}, "coverage": {"type": "string"}, "insertSizeMetrics": {"type": "string"}, "fastqc": {"type": "string"}, "reference": {"type": "string"}, "alignmentId": {"type": "string"}, "sequencingId": {"type": "string"}, "site": {"type": "string"}}}, "ga4ghExpressionAnalysis": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "sampleId": {"type": "string"}, "readLength": {"type": "string"}, "reference": {"type": "string"}, "alignmentTool": {"type": "string"}, "bamHandling": {"type": "string"}, "expressionEstimation": {"type": "string"}, "expressionAnalysisId": {"type": "string"}, "sequencingId": {"type": "string"}, "site": {"type": "string"}}}, "ga4ghExtraction": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "sampleId": {"type": "string"}, "rnaBlood": {"type": "string"}, "dnaBlood": {"type": "string"}, "rnaTissue": {"type": "string"}, "dnaTissue": {"type": "string"}, "extractionId": {"type": "string"}, "site": {"type": "string"}}}, "ga4ghFusionDetection": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "sampleId": {"type": "string"}, "inHousePipeline": {"type": "string"}, "svDetection": {"type": "string"}, "fusionDetection": {"type": "string"}, "realignment": {"type": "string"}, "annotation": {"type": "string"}, "genomeReference": {"type": "string"}, "geneModels": {"type": "string"}, "fusionDetectionId": {"type": "string"}, "alignmentId": {"type": "string"}, "site": {"type": "string"}}}, "ga4ghSearchAlignmentsRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Alignments with the given name found by case-sensitive string matching."}, "sample_id": {"type": "string", "title": "Option to filter for a sample id"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.If unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.To get the next page of results, set this parameter to the value of`nextPageToken` from the previous response."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}}, "description": "AlignmentThis request maps to the body of `POST /alignments/search` as JSON."}, "ga4ghSearchAlignmentsResponse": {"type": "object", "properties": {"alignments": {"type": "array", "items": {"$ref": "#/definitions/ga4ghAlignment"}, "description": "The list of alignments."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.Provide this value in a subsequent request to return the next page ofresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /alignments/search` expressed as JSON."}, "ga4ghSearchExpressionAnalysisRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Treatments with the given name found by case-sensitive string matching."}, "sample_id": {"type": "string", "title": "Option to filter for a sample id"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.If unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.To get the next page of results, set this parameter to the value of`nextPageToken` from the previous response."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}}, "description": "ExpressionAnalysisThis request maps to the body of `POST /expressionanalysis/search` as JSON."}, "ga4ghSearchExpressionAnalysisResponse": {"type": "object", "properties": {"expressionanalysis": {"type": "array", "items": {"$ref": "#/definitions/ga4ghExpressionAnalysis"}, "description": "The list of expression analysis."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.Provide this value in a subsequent request to return the next page ofresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /expressionanalysis/search` expressed as JSON."}, "ga4ghSearchExtractionsRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Extractions with the given name found by case-sensitive string matching."}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.If unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.To get the next page of results, set this parameter to the value of`nextPageToken` from the previous response."}, "sample_id": {"type": "string", "description": "Optionally specify the sample to search within."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}}, "description": "ExtractionThis request maps to the body of `POST /extractions/search` as JSON."}, "ga4ghSearchExtractionsResponse": {"type": "object", "properties": {"extractions": {"type": "array", "items": {"$ref": "#/definitions/ga4ghExtraction"}, "description": "The list of extractions."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.Provide this value in a subsequent request to return the next page ofresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /extractions/search` expressed as JSON."}, "ga4ghSearchFusionDetectionRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns FusionDetection with the given name found by case-sensitive string matching."}, "sample_id": {"type": "string", "title": "Option to filter for a sample id"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.If unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.To get the next page of results, set this parameter to the value of`nextPageToken` from the previous response."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}}, "description": "FusionDetectionThis request maps to the body of `POST /fusiondetection/search` as JSON."}, "ga4ghSearchFusionDetectionResponse": {"type": "object", "properties": {"fusiondetection": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFusionDetection"}, "description": "The list of fusion/sv detections."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.Provide this value in a subsequent request to return the next page ofresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /fusiondetection/search` expressed as JSON."}, "ga4ghSearchSequencingRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns Sequencing with the given name found by case-sensitive string matching."}, "sample_id": {"type": "string", "title": "Option to filter for a sample id"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.If unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.To get the next page of results, set this parameter to the value of`nextPageToken` from the previous response."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}}, "description": "SequencingThis request maps to the body of `POST /sequencing/search` as JSON."}, "ga4ghSearchSequencingResponse": {"type": "object", "properties": {"sequencing": {"type": "array", "items": {"$ref": "#/definitions/ga4ghSequencing"}, "description": "The list of sequencing metadata."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.Provide this value in a subsequent request to return the next page ofresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /sequencing/search` expressed as JSON."}, "ga4ghSearchVariantCallingRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "Optionally specify the dataset to search within."}, "name": {"type": "string", "description": "Returns VariantCalling with the given name found by case-sensitive string matching."}, "sample_id": {"type": "string", "title": "Option to filter for a sample id"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.If unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.To get the next page of results, set this parameter to the value of`nextPageToken` from the previous response."}, "filters": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFilter"}, "title": "Filter on any of the fields"}}, "description": "VariantCallingThis request maps to the body of `POST /variantcalling/search` as JSON."}, "ga4ghSearchVariantCallingResponse": {"type": "object", "properties": {"variantcalling": {"type": "array", "items": {"$ref": "#/definitions/ga4ghVariantCalling"}, "description": "The list of variant calling metadata."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.Provide this value in a subsequent request to return the next page ofresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /variantcalling/search` expressed as JSON."}, "ga4ghSequencing": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "sampleId": {"type": "string"}, "dnaLibraryKit": {"type": "string"}, "dnaSeqPlatform": {"type": "string"}, "dnaReadLength": {"type": "string"}, "rnaLibraryKit": {"type": "string"}, "rnaSeqPlatform": {"type": "string"}, "rnaReadLength": {"type": "string"}, "pcrCycles": {"type": "string"}, "sequencingId": {"type": "string"}, "extractionId": {"type": "string"}, "site": {"type": "string"}}}, "ga4ghVariantCalling": {"type": "object", "properties": {"id": {"type": "string", "description": "This is unique in the context of the server instance."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this object belongs to."}, "name": {"type": "string", "description": "This is a label or symbolic identifier for this object."}, "description": {"type": "string", "description": "This attribute contains human readable text."}, "created": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was created."}, "updated": {"type": "string", "description": "The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated."}, "sampleId": {"type": "string"}, "inHousePipeline": {"type": "string"}, "variantCaller": {"type": "string"}, "tabulate": {"type": "string"}, "annotation": {"type": "string"}, "mergeTool": {"type": "string"}, "rdaToTab": {"type": "string"}, "delly": {"type": "string"}, "postFilter": {"type": "string"}, "clipFilter": {"type": "string"}, "cosmic": {"type": "string"}, "dbSnp": {"type": "string"}, "variantCallingId": {"type": "string"}, "alignmentId": {"type": "string"}, "site": {"type": "string"}}}, "CigarUnitOperation": {"type": "string", "enum": ["OPERATION_UNSPECIFIED", "ALIGNMENT_MATCH", "INSERT", "DELETE", "SKIP", "CLIP_SOFT", "CLIP_HARD", "PAD", "SEQUENCE_MATCH", "SEQUENCE_MISMATCH"], "default": "OPERATION_UNSPECIFIED", "description": "Describes the different types of CIGAR alignment operations that exist.\nUsed wherever CIGAR alignments are used.\n\n - OPERATION_UNSPECIFIED: The null operation.\n - ALIGNMENT_MATCH: An alignment match indicates that a sequence can be aligned to the\nreference without evidence of an INDEL. Unlike the\n`SEQUENCE_MATCH` and `SEQUENCE_MISMATCH` operators,\nthe `ALIGNMENT_MATCH` operator does not indicate whether the\nreference and read sequences are an exact match. This operator is\nequivalent to SAM's `M`.\n - INSERT: The insert operator indicates that the read contains evidence of bases\nbeing inserted into the reference. This operator is equivalent to SAM's\n`I`.\n - DELETE: The delete operator indicates that the read contains evidence of bases\nbeing deleted from the reference. This operator is equivalent to SAM's\n`D`.\n - SKIP: The skip operator indicates that this read skips a long segment of the\nreference, but the bases have not been deleted. This operator is commonly\nused when working with RNA-seq data, where reads may skip long segments\nof the reference between exons. This operator is equivalent to SAM's\n`N`.\n - CLIP_SOFT: The soft clip operator indicates that bases at the start/end of a read\nhave not been considered during alignment. This may occur if the majority\nof a read maps, except for low quality bases at the start/end of a read.\nThis operator is equivalent to SAM's `S`. Bases that are soft\nclipped will still be stored in the read.\n - CLIP_HARD: The hard clip operator indicates that bases at the start/end of a read\nhave been omitted from this alignment. This may occur if this linear\nalignment is part of a chimeric alignment, or if the read has been\ntrimmed (for example, during error correction or to trim poly-A tails for\nRNA-seq). This operator is equivalent to SAM's `H`.\n - PAD: The pad operator indicates that there is padding in an alignment. This\noperator is equivalent to SAM's `P`.\n - SEQUENCE_MATCH: This operator indicates that this portion of the aligned sequence exactly\nmatches the reference. This operator is equivalent to SAM's `=`.\n - SEQUENCE_MISMATCH: This operator indicates that this portion of the aligned sequence is an\nalignment match to the reference, but a sequence mismatch. This can\nindicate a SNP or a read error. This operator is equivalent to SAM's\n`X`."}, "ga4ghCigarUnit": {"type": "object", "properties": {"operation": {"$ref": "#/definitions/CigarUnitOperation"}, "operation_length": {"type": "string", "format": "int64", "description": "The number of genomic bases that the operation runs for. Required."}, "reference_sequence": {"type": "string", "description": "`referenceSequence` is only used at mismatches\n(`SEQUENCE_MISMATCH`) and deletions (`DELETE`).\nFilling this field replaces SAM's MD tag. If the relevant information is\nnot available, this field is unset."}}, "description": "A single CIGAR operation."}, "ga4ghLinearAlignment": {"type": "object", "properties": {"position": {"$ref": "#/definitions/ga4ghPosition", "description": "The position of this alignment."}, "mapping_quality": {"type": "integer", "format": "int32", "description": "The mapping quality of this alignment, meaning the likelihood that the read\nmaps to this position.\n\nSpecifically, this is -10 log10 Pr(mapping position is wrong), rounded to\nthe nearest integer."}, "cigar": {"type": "array", "items": {"$ref": "#/definitions/ga4ghCigarUnit"}, "description": "Represents the local alignment of this sequence (alignment matches, indels,\netc)\nversus the reference."}}, "description": "A linear alignment describes the alignment of a read to a Reference, using a\nposition and CIGAR array."}, "ga4ghPosition": {"type": "object", "properties": {"reference_name": {"type": "string", "description": "The name of the `Reference` on which the `Position` is located."}, "position": {"type": "string", "format": "int64", "description": "The 0-based offset from the start of the forward strand for that\n`Reference`. Genomic positions are non-negative integers less than\n`Reference` length."}, "strand": {"$ref": "#/definitions/ga4ghStrand", "description": "Strand the position is associated with."}}, "description": "A `Position` is an unoriented base in some `Reference`. A `Position` is\nrepresented by a `Reference` name, and a base number on that `Reference`\n(0-based)."}, "ga4ghReadAlignment": {"type": "object", "properties": {"id": {"type": "string", "description": "The read alignment ID. This ID is unique within the read group this\nalignment belongs to.\n\nFor performance reasons, this field may be omitted by a backend.\nIf provided, its intended use is to make caching and UI display easier for\ngenome browsers and other lightweight clients."}, "read_group_id": {"type": "string", "title": "The ID of the read group this read belongs to.\n(Every read must belong to exactly one read group.)"}, "fragment_name": {"type": "string", "description": "The fragment name. Equivalent to QNAME (query template name) in SAM."}, "improper_placement": {"type": "boolean", "format": "boolean", "description": "The orientation and the distance between reads from the fragment are\ninconsistent with the sequencing protocol (inverse of SAM flag 0x2)."}, "duplicate_fragment": {"type": "boolean", "format": "boolean", "description": "The fragment is a PCR or optical duplicate (SAM flag 0x400)."}, "number_reads": {"type": "integer", "format": "int32", "description": "The number of reads in the fragment (extension to SAM flag 0x1)."}, "fragment_length": {"type": "integer", "format": "int32", "description": "The observed length of the fragment, equivalent to TLEN in SAM."}, "read_number": {"type": "integer", "format": "int32", "description": "The read ordinal in the fragment, 0-based and less than numberReads. This\nfield replaces SAM flag 0x40 and 0x80 and is intended to more cleanly\nrepresent multiple reads per fragment."}, "failed_vendor_quality_checks": {"type": "boolean", "format": "boolean", "description": "The read fails platform or vendor quality checks (SAM flag 0x200)."}, "alignment": {"$ref": "#/definitions/ga4ghLinearAlignment", "description": "The alignment for this alignment message. This field will be null if the\nread is unmapped."}, "secondary_alignment": {"type": "boolean", "format": "boolean", "description": "Whether this alignment is secondary. Equivalent to SAM flag 0x100.\nA secondary alignment represents an alternative to the primary alignment\nfor this read. Aligners may return secondary alignments if a read can map\nambiguously to multiple coordinates in the genome.\n\nBy convention, each read has one and only one alignment where both\nsecondaryAlignment and supplementaryAlignment are false."}, "supplementary_alignment": {"type": "boolean", "format": "boolean", "description": "Whether this alignment is supplementary. Equivalent to SAM flag 0x800.\nSupplementary alignments are used in the representation of a chimeric\nalignment. In a chimeric alignment, a read is split into multiple\nlinear alignments that map to different reference contigs. The first\nlinear alignment in the read will be designated as the representative\nalignment; the remaining linear alignments will be designated as\nsupplementary alignments. These alignments may have different mapping\nquality scores.\n\nIn each linear alignment in a chimeric alignment, the read will be hard\nclipped. The `alignedSequence` and `alignedQuality` fields in the alignment\nmessage will only represent the bases for its respective linear alignment."}, "aligned_sequence": {"type": "string", "description": "The bases of the read sequence contained in this alignment record\n(equivalent to SEQ in SAM).\n\n`alignedSequence` and `alignedQuality` may be shorter than the full read\nsequence and quality. This will occur if the alignment is part of a\nchimeric alignment, or if the read was trimmed. When this occurs, the CIGAR\nfor this read will begin/end with a hard clip operator that will indicate\nthe length of the excised sequence."}, "aligned_quality": {"type": "array", "items": {"type": "integer", "format": "int32"}, "description": "The quality of the read sequence contained in this alignment message\n(equivalent to QUAL in SAM).\n\n`alignedSequence` and `alignedQuality` may be shorter than the full read\nsequence and quality. This will occur if the alignment is part of a\nchimeric alignment, or if the read was trimmed. When this occurs, the CIGAR\nfor this read will begin/end with a hard clip operator that will indicate\nthe length of the excised sequence."}, "next_mate_position": {"$ref": "#/definitions/ga4ghPosition", "description": "The mapping of the primary alignment of the `(readNumber+1)%numberReads`\nread in the fragment. It replaces mate position and mate strand in SAM."}}, "description": "Each read alignment describes an alignment with additional information\nabout the fragment and the read. A read alignment object is equivalent to a\nline in a SAM file."}, "ga4ghReadGroup": {"type": "object", "properties": {"id": {"type": "string", "description": "The read group ID."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this read group belongs to."}, "name": {"type": "string", "description": "The read group name."}, "description": {"type": "string", "description": "The read group description."}, "sample_name": {"type": "string", "description": "A name for the sample this read group's data were generated from.\nThis field contains an arbitrary string, typically\ncorresponding to the SM tag in a BAM file."}, "biosample_id": {"type": "string", "description": "The Biosample this read group's data was generated from."}, "experiment": {"$ref": "#/definitions/ga4ghExperiment", "description": "The experiment used to generate this read group."}, "predicted_insert_size": {"type": "integer", "format": "int32", "description": "The predicted insert size of this read group."}, "created": {"type": "string", "format": "int64", "description": "The time at which this read group was created in milliseconds from the\nepoch."}, "updated": {"type": "string", "format": "int64", "description": "The time at which this read group was last updated in milliseconds\nfrom the epoch."}, "stats": {"$ref": "#/definitions/ga4ghReadStats", "description": "Statistical data on reads in this read group."}, "programs": {"type": "array", "items": {"$ref": "#/definitions/ga4ghProgram"}, "description": "Program can be used to track the provenance of how read data was generated."}, "reference_set_id": {"type": "string", "description": "The ID of the reference set to which the reads in this read group are\naligned. Required if there are any read alignments."}}, "description": "A ReadGroup is a set of reads derived from one physical sequencing process."}, "ga4ghReadGroupSet": {"type": "object", "properties": {"id": {"type": "string", "description": "The read group set ID."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this read group set belongs to."}, "name": {"type": "string", "description": "The read group set name."}, "stats": {"$ref": "#/definitions/ga4ghReadStats", "description": "Statistical data on reads in this read group set."}, "read_groups": {"type": "array", "items": {"$ref": "#/definitions/ga4ghReadGroup"}, "description": "The read groups in this set."}, "patient_id": {"type": "string", "title": "For read group data identification and search join purposes"}, "sample_id": {"type": "string", "title": "For read group data identification and search join purposes"}}, "description": "A ReadGroupSet is a logical collection of ReadGroups. Typically one\nReadGroupSet represents all the reads from one experimental sample."}, "ga4ghReadStats": {"type": "object", "properties": {"aligned_read_count": {"type": "string", "format": "int64", "description": "The number of aligned reads."}, "unaligned_read_count": {"type": "string", "format": "int64", "description": "The number of unaligned reads."}, "base_count": {"type": "string", "format": "int64", "description": "The total number of bases.\nThis is equivalent to the sum of `alignedSequence.length` for all reads."}}, "description": "ReadStats can be used to provide summary statistics about read data."}, "ga4ghSearchReadGroupSetsRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "The dataset to search."}, "name": {"type": "string", "description": "Only return read group sets with this name (case-sensitive, exact match)."}, "biosample_id": {"type": "string", "description": "Specifying the id of a Biosample record will return only readgroups\n with the given biosampleId."}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."}}, "description": "This request maps to the body of `POST /readgroupsets/search` as JSON.\n\nTODO: Factor this out to a common API patterns section.\n- If searching by a resource ID, and that resource is not found, the method\n  will return a `404` HTTP status code (`NOT_FOUND`).\n- If searching by other attributes, e.g. `name`, and no matches are found, the\n  method will return a `200` HTTP status code (`OK`) with an empty result list."}, "ga4ghSearchReadGroupSetsResponse": {"type": "object", "properties": {"read_group_sets": {"type": "array", "items": {"$ref": "#/definitions/ga4ghReadGroupSet"}, "description": "The list of matching read group sets."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /readgroupsets/search` expressed as JSON."}, "ga4ghSearchReadsRequest": {"type": "object", "properties": {"read_group_ids": {"type": "array", "items": {"type": "string"}, "description": "The ReadGroups to search. At least one id must be specified."}, "reference_id": {"type": "string", "description": "The reference to query. Leaving blank returns results from all\nreferences, including unmapped reads - this could be very large."}, "start": {"type": "string", "format": "int64", "description": "The start position (0-based) of this query.\nIf a reference is specified, this defaults to 0.\nGenomic positions are non-negative integers less than reference length.\nRequests spanning the join of circular genomes are represented as\ntwo requests one on each side of the join (position 0)."}, "end": {"type": "string", "format": "int64", "description": "The end position (0-based, exclusive) of this query.\nIf a reference is specified, this defaults to the\nreference's length."}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."}}, "description": "******************  /reads  *********************\nThis request maps to the body of `POST /reads/search` as JSON.\n\nIf a reference is specified, all queried `ReadGroup`s must be aligned\nto `ReferenceSet`s containing that same `Reference`. If no reference is\nspecified, all `ReadGroup`s must be aligned to the same `ReferenceSet`."}, "ga4ghSearchReadsResponse": {"type": "object", "properties": {"alignments": {"type": "array", "items": {"$ref": "#/definitions/ga4ghReadAlignment"}, "description": "The list of matching alignment messages, sorted by position.\nUnmapped reads, which have no position, are returned last."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /reads/search` expressed as JSON."}, "ga4ghStrand": {"type": "string", "enum": ["STRAND_UNSPECIFIED", "NEG_STRAND", "POS_STRAND"], "default": "STRAND_UNSPECIFIED", "description": "Indicates the associated DNA strand for some data item.\n\n - STRAND_UNSPECIFIED: If no strand data is available.\n - NEG_STRAND: The negative (-) strand.\n - POS_STRAND: The postive (+) strand."}, "ga4ghListReferenceBasesRequest": {"type": "object", "properties": {"reference_id": {"type": "string", "description": "The ID of the `Reference` to be retrieved."}, "start": {"type": "string", "format": "int64", "description": "The start position (0-based) of this query. Defaults to 0.\nGenomic positions are non-negative integers less than reference length.\nRequests spanning the join of circular genomes are represented as\ntwo requests one on each side of the join (position 0)."}, "end": {"type": "string", "format": "int64", "description": "The end position (0-based, exclusive) of this query. Defaults\nto the length of this `Reference`."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."}}, "description": "This request retrieves a region of a reference genome when sent to \nthe `/listreferencebases` endpoint."}, "ga4ghListReferenceBasesResponse": {"type": "object", "properties": {"offset": {"type": "string", "format": "int64", "description": "The offset position (0-based) of the given sequence from the start of this\n`Reference`. This value will differ for each page in a paginated request."}, "sequence": {"type": "string", "description": "A substring of the bases that make up this reference. Bases are represented\nas IUPAC-IUB codes; this string matches the regexp `[ACGTMRWSYKVHDBN]*`."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "The response from `POST /listreferencebases` expressed as JSON."}, "ga4ghReference": {"type": "object", "properties": {"id": {"type": "string", "description": "The reference ID. Unique within the repository."}, "length": {"type": "string", "format": "int64", "description": "The length of this reference's sequence."}, "md5checksum": {"type": "string", "description": "The MD5 checksum uniquely representing this `Reference` as a lower-case\nhexadecimal string, calculated as the MD5 of the upper-case sequence\nexcluding all whitespace characters (this is equivalent to SQ:M5 in SAM)."}, "name": {"type": "string", "description": "The unique name of this reference within the Reference Set (e.g. '22')."}, "source_uri": {"type": "string", "description": "The URI from which the sequence was obtained. Specifies a FASTA format\nfile/string with one name, sequence pair. In most cases, clients should\ncall\nthe `getReferenceBases()` method to obtain sequence bases for a `Reference`\ninstead of attempting to retrieve this URI."}, "source_accessions": {"type": "array", "items": {"type": "string"}, "description": "All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) which\nmust include\na version number, e.g. `GCF_000001405.26`."}, "is_derived": {"type": "boolean", "format": "boolean", "description": "A sequence X is said to be derived from source sequence Y, if X and Y\nare of the same length and the per-base sequence divergence at A/C/G/T\nbases\nis sufficiently small. Two sequences derived from the same official\nsequence share the same coordinates and annotations, and\ncan be replaced with the official sequence for certain use cases."}, "source_divergence": {"type": "number", "format": "float", "description": "The `sourceDivergence` is the fraction of non-indel bases that do not match\nthe\nreference this message was derived from."}, "species": {"$ref": "#/definitions/ga4ghOntologyTerm", "title": "For a representation of an NCBI Taxon ID as an OntologyTerm, see\nNCBITaxon Ontology\n  http://www.obofoundry.org/ontology/ncbitaxon.html\nFor example, 'Homo sapiens' has the ID 9606. The NCBITaxon ontology ID for\nthis is NCBITaxon:9606, which has the URI\nhttp://purl.obolibrary.org/obo/NCBITaxon_9606"}}, "description": "A `Reference` is a canonical assembled contig, intended to act as a\nreference coordinate space for other genomic annotations. A single\n`Reference` might represent the human chromosome 1, for instance.\n\n`Reference` s are designed to be immutable."}, "ga4ghReferenceSet": {"type": "object", "properties": {"id": {"type": "string", "description": "The reference set ID. Unique in the repository."}, "name": {"type": "string", "description": "The reference set name."}, "md5checksum": {"type": "string", "description": "Order-independent MD5 checksum which identifies this `ReferenceSet`.\n\nTo compute this checksum, make a list of `Reference.md5checksum` for all\n`Reference` s in this set. Then sort that list, and take the MD5 hash of\nall the strings concatenated together. Express the hash as a lower-case\nhexadecimal string."}, "species": {"$ref": "#/definitions/ga4ghOntologyTerm", "title": "For a representation of an NCBI Taxon ID as an OntologyTerm, see\nNCBITaxon Ontology\n  http://www.obofoundry.org/ontology/ncbitaxon.html\nFor example, 'Homo sapiens' has the ID 9606. The NCBITaxon ontology ID for\nthis is NCBITaxon:9606, which has the URI\nhttp://purl.obolibrary.org/obo/NCBITaxon_9606"}, "description": {"type": "string", "description": "Optional free text description of this reference set."}, "assembly_id": {"type": "string", "description": "The remaining information is about the source of the sequences\nPublic id of this reference set, such as `GRCh37`."}, "source_uri": {"type": "string", "description": "Specifies a FASTA format file/string."}, "source_accessions": {"type": "array", "items": {"type": "string"}, "description": "All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally\nwith a version number, e.g. `NC_000001.11`."}, "is_derived": {"type": "boolean", "format": "boolean", "description": "A reference set may be derived from a source if it contains\nadditional sequences, or some of the sequences within it are derived\n(see the definition of `isDerived` in `Reference`)."}}, "description": "A `ReferenceSet` is a set of `Reference` s which typically comprise a\nreference assembly, such as `GRCh38`. A `ReferenceSet` defines a common\ncoordinate space for comparing reference-aligned experimental data."}, "ga4ghSearchReferenceSetsRequest": {"type": "object", "properties": {"md5checksum": {"type": "string", "description": "If unset, return the reference sets for which the\n`md5checksum` matches this string (case-sensitive, exact match).\nSee `ReferenceSet::md5checksum` for details."}, "accession": {"type": "string", "description": "If unset, return the reference sets for which the `accession`\nmatches this string (case-sensitive, exact match)."}, "assembly_id": {"type": "string", "description": "If unset, return the reference sets for which the `assemblyId`\nmatches this string (case-sensitive, exact match)."}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."}}, "description": "****************  /referencesets  *******************\nThis request maps to the body of `POST /referencesets/search` as JSON."}, "ga4ghSearchReferenceSetsResponse": {"type": "object", "properties": {"reference_sets": {"type": "array", "items": {"$ref": "#/definitions/ga4ghReferenceSet"}, "description": "The list of matching reference sets."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /referencesets/search` expressed as JSON."}, "ga4ghSearchReferencesRequest": {"type": "object", "properties": {"reference_set_id": {"type": "string", "description": "The `ReferenceSet` to search."}, "md5checksum": {"type": "string", "description": "If specified, return the references for which the\n`md5checksum` matches this string (case-sensitive, exact match).\nSee `ReferenceSet::md5checksum` for details."}, "accession": {"type": "string", "description": "If specified, return the references for which the `accession`\nmatches this string (case-sensitive, exact match)."}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."}}, "description": "****************  /references  *******************\nThis request maps to the body of `POST /references/search` as JSON."}, "ga4ghSearchReferencesResponse": {"type": "object", "properties": {"references": {"type": "array", "items": {"$ref": "#/definitions/ga4ghReference"}, "description": "The list of matching references."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /references/search` expressed as JSON."}, "ga4ghCall": {"type": "object", "properties": {"call_set_name": {"type": "string", "description": "The name of the call set this variant call belongs to.\nIf this field is not present, the ordering of the call sets from a\n`SearchCallSetsRequest` over this `VariantSet` is guaranteed to match\nthe ordering of the calls on this `Variant`.\nThe number of results will also be the same."}, "call_set_id": {"type": "string", "description": "The ID of the call set this variant call belongs to.\n\nIf this field is not present, the ordering of the call sets from a\n`SearchCallSetsRequest` over this `VariantSet` is guaranteed to match\nthe ordering of the calls on this `Variant`.\nThe number of results will also be the same."}, "genotype": {"$ref": "#/definitions/protobufListValue", "description": "The genotype of this variant call.\n\nA 0 value represents the reference allele of the associated `Variant`. Any\nother value is a 1-based index into the alternate alleles of the associated\n`Variant`.\n\nIf a variant had a referenceBases field of \"T\", an alternateBases\nvalue of [\"A\", \"C\"], and the genotype was [2, 1], that would mean the call\nrepresented the heterozygous value \"CA\" for this variant. If the genotype\nwas instead [0, 1] the represented value would be \"TA\". Ordering of the\ngenotype values is important if the phaseset field is present.\nMissing genotype genotypes may be indicated using the \"dot annotation\" [\".\", \".\"],\nas specified in VCF4.2; this is e.g. used for types of structural variants."}, "phaseset": {"type": "string", "description": "If this field is populated, this variant call's genotype ordering implies\nthe phase of the bases and is consistent with any other variant calls on\nthe same contig which have the same phaseset string."}, "genotype_likelihood": {"type": "array", "items": {"type": "number", "format": "double"}, "description": "The genotype likelihoods for this variant call. Each array entry\nrepresents how likely a specific genotype is for this call as\nlog10(P(data | genotype)), analogous to the GL tag in the VCF spec. The\nvalue ordering is defined by the GL tag in the VCF spec."}, "attributes": {"$ref": "#/definitions/ga4ghAttributes", "description": "A map of additional information about the Call."}}, "description": "A `Call` represents the determination of genotype with respect to a\nparticular `Variant`.\n\nIt may include associated information such as quality\nand phasing. For example, a call might assign a probability of 0.32 to\nthe occurrence of a SNP named rs1234 in a call set with the name NA12345."}, "ga4ghComponent": {"type": "object", "properties": {"id": {"type": "string", "title": "A unique identifier of the current component"}, "patients": {"$ref": "#/definitions/ga4ghSearchPatientsRequest"}, "enrollments": {"$ref": "#/definitions/ga4ghSearchEnrollmentsRequest"}, "consents": {"$ref": "#/definitions/ga4ghSearchConsentsRequest"}, "diagnoses": {"$ref": "#/definitions/ga4ghSearchDiagnosesRequest"}, "samples": {"$ref": "#/definitions/ga4ghSearchSamplesRequest"}, "treatments": {"$ref": "#/definitions/ga4ghSearchTreatmentsRequest"}, "outcomes": {"$ref": "#/definitions/ga4ghSearchOutcomesRequest"}, "complications": {"$ref": "#/definitions/ga4ghSearchComplicationsRequest"}, "tumourboards": {"$ref": "#/definitions/ga4ghSearchTumourboardsRequest"}, "variants": {"$ref": "#/definitions/ga4ghSearchVariantsRequest"}, "variantsByGene": {"$ref": "#/definitions/ga4ghSearchVariantsByGeneNameRequest"}, "slides": {"$ref": "#/definitions/ga4ghSearchSlidesRequest"}, "studies": {"$ref": "#/definitions/ga4ghSearchStudiesRequest"}, "labtests": {"$ref": "#/definitions/ga4ghSearchLabtestsRequest"}, "chemotherapies": {"$ref": "#/definitions/ga4ghSearchChemotherapiesRequest"}, "radiotherapies": {"$ref": "#/definitions/ga4ghSearchRadiotherapiesRequest"}, "immunotherapies": {"$ref": "#/definitions/ga4ghSearchImmunotherapiesRequest"}, "surgeries": {"$ref": "#/definitions/ga4ghSearchSurgeriesRequest"}, "celltransplants": {"$ref": "#/definitions/ga4ghSearchCelltransplantsRequest"}}, "title": "Contains statements exclusively on a single table"}, "ga4ghLogic": {"type": "object", "properties": {"and": {"type": "array", "items": {"$ref": "#/definitions/ga4ghLogic"}}, "or": {"type": "array", "items": {"$ref": "#/definitions/ga4ghLogic"}}, "id": {"type": "string"}, "negate": {"type": "boolean", "format": "boolean"}}}, "ga4ghResult": {"type": "object", "properties": {"table": {"type": "string", "title": "Name of a single table from which fields are requested"}, "fields": {"type": "array", "items": {"type": "string"}, "title": "List of fields of the requested table"}, "start": {"type": "string", "title": "Start bp. Used if the user is requesting variants endpoint"}, "end": {"type": "string", "title": "End bp. Used if the user is requesting variants endpoint"}, "referenceName": {"type": "string", "description": "Reference genome. Used if the user is requesting variants endpoint."}, "gene": {"type": "string", "description": "Gene name. Used if the user is requesting variantsByGene endpoint."}, "count": {"type": "array", "items": {"type": "string"}, "description": "List of fields to aggregate by and return counts. Overrides response format if included."}}, "title": "Definition of which table and which fields should be returned"}, "ga4ghSearchQueryRequest": {"type": "object", "properties": {"dataset_id": {"type": "string"}, "logic": {"$ref": "#/definitions/ga4ghLogic", "title": "Definition of the high order logical operations on components"}, "components": {"type": "array", "items": {"$ref": "#/definitions/ga4ghComponent"}, "title": "Array of single table queries"}, "results": {"type": "array", "items": {"$ref": "#/definitions/ga4ghResult"}, "title": "Definition of the requested tables and fields"}, "limit": {"type": "integer", "format": "int32", "title": "Limit of the maximum number of records"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`nextPageToken` from the previous response."}}, "title": "Request object for the search function"}, "ga4ghSearchQueryResponse": {"type": "object", "properties": {"patients": {"type": "array", "items": {"$ref": "#/definitions/ga4ghPatient"}, "title": "List of patients"}, "enrollments": {"type": "array", "items": {"$ref": "#/definitions/ga4ghEnrollment"}, "title": "List of enrollments"}, "consents": {"type": "array", "items": {"$ref": "#/definitions/ga4ghConsent"}, "title": "List of consents"}, "diagnoses": {"type": "array", "items": {"$ref": "#/definitions/ga4ghDiagnosis"}, "title": "List of diagnoses"}, "samples": {"type": "array", "items": {"$ref": "#/definitions/ga4ghSample"}, "title": "List of samples"}, "treatments": {"type": "array", "items": {"$ref": "#/definitions/ga4ghTreatment"}, "title": "List of treatments"}, "outcomes": {"type": "array", "items": {"$ref": "#/definitions/ga4ghOutcome"}, "title": "List of outcomes"}, "complications": {"type": "array", "items": {"$ref": "#/definitions/ga4ghComplication"}, "title": "List of complications"}, "tumourboards": {"type": "array", "items": {"$ref": "#/definitions/ga4ghTumourboard"}, "title": "List of tumourboard results"}, "variants": {"type": "array", "items": {"$ref": "#/definitions/ga4ghVariant"}, "title": "List of variants"}, "slides": {"type": "array", "items": {"$ref": "#/definitions/ga4ghSlide"}}, "studies": {"type": "array", "items": {"$ref": "#/definitions/ga4ghStudy"}}, "labtests": {"type": "array", "items": {"$ref": "#/definitions/ga4ghLabtest"}}, "surgeries": {"type": "array", "items": {"$ref": "#/definitions/ga4ghSurgery"}}, "chemotherapies": {"type": "array", "items": {"$ref": "#/definitions/ga4ghChemotherapy"}}, "immunotherapies": {"type": "array", "items": {"$ref": "#/definitions/ga4ghImmunotherapy"}}, "radiotherapies": {"type": "array", "items": {"$ref": "#/definitions/ga4ghRadiotherapy"}}, "celltransplants": {"type": "array", "items": {"$ref": "#/definitions/ga4ghCelltransplant"}}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "title": "Response object for the search function"}, "ga4ghSearchVariantsByGeneNameRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "The `VariantSet` to search."}, "gene": {"type": "string", "title": "The gene name to search"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."}, "patient_list": {"type": "array", "items": {"type": "string"}, "title": "List of patient ID's used in advanced searches"}, "start": {"type": "string", "format": "int64", "title": "Start bp. Used in advanced searched if the user is requesting variants endpoint"}, "end": {"type": "string", "format": "int64", "title": "End bp. Used in advanced searched if the user is requesting variants endpoint"}, "reference_name": {"type": "string", "description": "Reference genome. Used in advanced searchesif the user is requesting variants endpoint."}, "call_set_ids": {"type": "array", "items": {"type": "string"}, "description": "Only return variant calls which belong to call sets with these IDs.\nIf unspecified, return all variants and no variant call objects."}}, "description": "******************  /variants  *********************\nThis request maps to the body of `POST /variantsnamebygenesearch` as JSON."}, "ga4ghSearchVariantsRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "The `dataset` to search."}, "call_set_ids": {"type": "array", "items": {"type": "string"}, "description": "Only return variant calls which belong to call sets with these IDs.\nIf unspecified, return all variants and no variant call objects."}, "reference_name": {"type": "string", "description": "Required. Only return variants on this reference."}, "start": {"type": "string", "format": "int64", "description": "Required. The beginning of the window (0-based, inclusive) for\nwhich overlapping variants should be returned.\nGenomic positions are non-negative integers less than reference length.\nRequests spanning the join of circular genomes are represented as\ntwo requests one on each side of the join (position 0)."}, "end": {"type": "string", "format": "int64", "description": "Required. The end of the window (0-based, exclusive) for which overlapping\nvariants should be returned."}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."}, "variant_set_ids": {"type": "array", "items": {"type": "string"}, "title": "a list of variant sets to search from"}}, "description": "******************  /variants  *********************\nThis request maps to the body of `POST /variants/search` as JSON."}, "ga4ghVariant": {"type": "object", "properties": {"id": {"type": "string", "description": "The variant ID."}, "variant_set_id": {"type": "string", "description": "The ID of the `VariantSet` this variant belongs to. This transitively\ndefines\nthe `ReferenceSet` against which the `Variant` is to be interpreted."}, "names": {"type": "array", "items": {"type": "string"}, "description": "Names for the variant, for example a RefSNP ID."}, "created": {"type": "string", "format": "int64", "description": "The date this variant was created in milliseconds from the epoch."}, "updated": {"type": "string", "format": "int64", "description": "The time at which this variant was last updated in\nmilliseconds from the epoch."}, "reference_name": {"type": "string", "title": "The reference on which this variant occurs.\n(e.g. `chr20` or `X`)"}, "start": {"type": "string", "format": "int64", "description": "The start position at which this variant occurs (0-based).\nThis corresponds to the first base of the string of reference bases.\nGenomic positions are non-negative integers less than reference length.\nVariants spanning the join of circular genomes are represented as\ntwo variants one on each side of the join (position 0)."}, "end": {"type": "string", "format": "int64", "description": "The end position (exclusive), resulting in [start, end) closed-open\ninterval.\nThis is typically calculated by `start + referenceBases.length`."}, "reference_bases": {"type": "string", "description": "The reference bases for this variant. They start at the given start\nposition."}, "alternate_bases": {"type": "array", "items": {"type": "string"}, "description": "The bases that appear instead of the reference bases. Multiple alternate\nalleles are possible."}, "attributes": {"$ref": "#/definitions/ga4ghAttributes", "description": "A map of additional information about the Variant."}, "calls": {"type": "array", "items": {"$ref": "#/definitions/ga4ghCall"}, "description": "The variant calls for this particular variant. Each one represents the\ndetermination of genotype with respect to this variant. `Call`s in this\narray are implicitly associated with this `Variant`."}, "variant_type": {"type": "string", "title": "The \"variant_type\" is used to denote e.g. structural variants.\nExamples:\n  DUP  : duplication of sequence following \"start\"; not necessarily in situ\n  DEL  : deletion of sequence following \"start\""}, "svlen": {"type": "string", "format": "int64", "title": "Length of the - if labeled as such in variant_type - structural variation.\nBased on the use in VCFv4.2"}, "cipos": {"type": "array", "items": {"type": "integer", "format": "int32"}, "title": "In the case of structural variants, start and end of the variant may not\nbe known with an exact base position. \"cipos\" provides an interval with\nhigh confidence for the start position. The interval is provided by 0 or\n2 signed integers which are added to the start position.\nBased on the use in VCFv4.2\nExample:\n  [ -12000, 1000 ]"}, "ciend": {"type": "array", "items": {"type": "integer", "format": "int32"}, "title": "Similar to \"cipos\", but for the variant's end position (which is derived\nfrom start + svlen).\nExample:\n  [ -1000, 0 ]"}, "filters_applied": {"type": "boolean", "format": "boolean", "description": "True if filters were applied for this variant. VCF column 7 \"FILTER\"\nany value other than the missing value."}, "filters_passed": {"type": "boolean", "format": "boolean", "description": "True if all filters for this variant passed. VCF column 7 \"FILTER\"\nvalue PASS."}, "filters_failed": {"type": "array", "items": {"type": "string"}, "description": "Zero or more filters that failed for this variant. VCF column 7 \"FILTER\"\nshared across all alleles in the same VCF record."}, "patientId": {"type": "string", "description": "Patient_Id, this field is not populated in the database, but generated on-the-fly\nwhen variants are being returned."}}, "description": "A `Variant` represents a change in DNA sequence relative to some reference.\nFor example, a variant could represent a SNP or an insertion.\nVariants belong to a `VariantSet`.\nThis is equivalent to a row in VCF."}, "googleprotobufNullValue": {"type": "string", "enum": ["NULL_VALUE"], "default": "NULL_VALUE", "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."}, "protobufListValue": {"type": "object", "properties": {"values": {"type": "array", "items": {"$ref": "#/definitions/protobufValue"}, "description": "Repeated field of dynamically typed values."}}, "description": "`ListValue` is a wrapper around a repeated field of values.\n\nThe JSON representation for `ListValue` is JSON array."}, "protobufStruct": {"type": "object", "properties": {"fields": {"type": "object", "additionalProperties": {"$ref": "#/definitions/protobufValue"}, "description": "Unordered map of dynamically typed values."}}, "description": "`Struct` represents a structured data value, consisting of fields\nwhich map to dynamically typed values. In some languages, `Struct`\nmight be supported by a native representation. For example, in\nscripting languages like JS a struct is represented as an\nobject. The details of that representation are described together\nwith the proto support for the language.\n\nThe JSON representation for `Struct` is JSON object."}, "protobufValue": {"type": "object", "properties": {"null_value": {"$ref": "#/definitions/googleprotobufNullValue", "description": "Represents a null value."}, "number_value": {"type": "number", "format": "double", "description": "Represents a double value."}, "string_value": {"type": "string", "description": "Represents a string value."}, "bool_value": {"type": "boolean", "format": "boolean", "description": "Represents a boolean value."}, "struct_value": {"$ref": "#/definitions/protobufStruct", "description": "Represents a structured value."}, "list_value": {"$ref": "#/definitions/protobufListValue", "description": "Represents a repeated `Value`."}}, "description": "`Value` represents a dynamically typed value which can be either\nnull, a number, a string, a boolean, a recursive struct value, or a\nlist of values. A producer of value is expected to set one of that\nvariants, absence of any variant indicates an error.\n\nThe JSON representation for `Value` is JSON value."}, "ga4ghExpressionLevel": {"type": "object", "properties": {"id": {"type": "string", "title": "Expression ID"}, "name": {"type": "string", "title": "Name"}, "rna_quantification_id": {"type": "string", "title": "The associated RnaQuantification"}, "raw_read_count": {"type": "number", "format": "float", "description": "The number of reads mapped to this feature."}, "expression": {"type": "number", "format": "float", "description": "Numerical expression value."}, "is_normalized": {"type": "boolean", "format": "boolean", "description": "True if the expression value is a normalized value."}, "units": {"$ref": "#/definitions/ga4ghExpressionUnit", "description": "The units of the expression value if one is given."}, "score": {"type": "number", "format": "float", "description": "Weighted score for the expression value."}, "conf_interval_low": {"type": "number", "format": "float", "description": "Lower bound of the confidence interval on the expression value."}, "conf_interval_high": {"type": "number", "format": "float", "description": "Upper bound of the confidence interval on the expression value."}}, "description": "The actual numerical quantification for each feature."}, "ga4ghExpressionUnit": {"type": "string", "enum": ["EXPRESSION_UNIT_UNSPECIFIED", "FPKM", "TPM", "RPKM"], "default": "EXPRESSION_UNIT_UNSPECIFIED"}, "ga4ghRnaQuantification": {"type": "object", "properties": {"id": {"type": "string", "description": "The unique ID assigned to the results of running the described programs\non the specified reads and assignment to the listed annotation."}, "name": {"type": "string", "title": "Name"}, "biosample_id": {"type": "string", "title": "Biosample ID"}, "description": {"type": "string", "title": "Description"}, "read_group_ids": {"type": "array", "items": {"type": "string"}, "description": "ID(s) of the ReadGroup(s) providing the reads for the analysis."}, "programs": {"type": "array", "items": {"$ref": "#/definitions/ga4ghProgram"}, "description": "Programs can be used to track the provenance of how read data was quantified."}, "feature_set_ids": {"type": "array", "items": {"type": "string"}, "description": "List of annotation sets used."}, "rna_quantification_set_id": {"type": "string", "description": "ID of the containing RnaQuantificationSet."}, "sampleId": {"type": "string", "title": "sampleId"}, "patientId": {"type": "string", "title": "patientId"}}, "title": "Top level identifying information"}, "ga4ghRnaQuantificationSet": {"type": "object", "properties": {"id": {"type": "string", "description": "The RNA quantification set ID."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this RNA Quantification set belongs to."}, "name": {"type": "string", "description": "The RNA quantification set name."}}, "description": "A collection of associated RNAQuantifications.  Typically this will be all\nthe Quantifications of samples from an experiment.  For example, a time\ncourse experiment would be described by a RnaQuantificationSet with the\nindividual RNASeq experiments of the time point being represented as the\nmember RnaQuantifications."}, "ga4ghSearchExpressionLevelsRequest": {"type": "object", "properties": {"rna_quantification_id": {"type": "string", "description": "The rnaQuantification to restrict search to."}, "names": {"type": "array", "items": {"type": "string"}, "description": "Only return expressions with any of the names (strict string matching)."}, "threshold": {"type": "number", "format": "float", "title": "Only return ExpressionLevel records with expressions exceeding\nthis value.  (Defaults to 0.0)"}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n'nextPageToken' from the previous response."}}, "description": "****************  /expressionlevels/search  *******************\nThis request maps to the body of 'POST /expressionlevels/search'\nas JSON."}, "ga4ghSearchExpressionLevelsResponse": {"type": "object", "properties": {"expression_levels": {"type": "array", "items": {"$ref": "#/definitions/ga4ghExpressionLevel"}, "description": "The list of matching quantifications."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n'nextPageToken' from the previous response."}}, "description": "This is the response from 'POST /expressionlevels/search' expressed as JSON."}, "ga4ghSearchRnaQuantificationSetsRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "The `Dataset` to search."}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n'nextPageToken' from the previous response."}}, "description": "This request maps to the body of 'POST /rnaquantificationsets/search'\nas JSON."}, "ga4ghSearchRnaQuantificationSetsResponse": {"type": "object", "properties": {"rna_quantification_sets": {"type": "array", "items": {"$ref": "#/definitions/ga4ghRnaQuantificationSet"}, "description": "The list of matching quantification sets."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n'nextPageToken' from the previous response."}}, "description": "This is the response from 'POST /rnaquantificationsets/search' expressed as JSON."}, "ga4ghSearchRnaQuantificationsRequest": {"type": "object", "properties": {"rna_quantification_set_id": {"type": "string", "description": "Return only Rna Quantifications which belong to this set.\nMust be specified."}, "biosample_id": {"type": "string", "description": "Return only RNA quantifications regarding the specified biosample. Optional."}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n'nextPageToken' from the previous response."}, "sampleId": {"type": "string", "description": "Return only RNA quantifications related to the specified sampleId."}, "patientId": {"type": "string", "description": "Return only RNA quantifications related to the specified patientId."}}, "description": "This request maps to the body of 'POST /rnaquantifications/search'\nas JSON."}, "ga4ghSearchRnaQuantificationsResponse": {"type": "object", "properties": {"rna_quantifications": {"type": "array", "items": {"$ref": "#/definitions/ga4ghRnaQuantification"}, "description": "The list of matching quantifications."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n'nextPageToken' from the previous response."}}, "description": "This is the response from 'POST /rnaquantifications/search' expressed as JSON."}, "ga4ghContinuous": {"type": "object", "properties": {"start": {"type": "string", "format": "int64", "description": "The start position at which this signal occurs (0-based). This\ncorresponds to the first base of the string of reference bases. Genomic\npositions are non-negative integers less than the reference length."}, "values": {"type": "array", "items": {"type": "number", "format": "double"}, "description": "The contiguous data values. Unsampled bases are given as NaN."}, "continuous_set_id": {"type": "string", "description": "Identifier for the containing continous set."}, "reference_name": {"type": "string", "description": "The reference on which this signal is defined (e.g. `chr20` or `X`)."}}, "description": "This message defines a format for exchanging continuous valued signal data,\nsuch as those produced experimentally (e.g. ChIP-Seq data) or through \ncalculations (e.g. conservation scores). It can be used, for example,\nto share data from Wiggle, BigWig, and BedGraph sources."}, "ga4ghContinuousSet": {"type": "object", "properties": {"id": {"type": "string", "description": "The ID of this annotation set."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this annotation set belongs to."}, "reference_set_id": {"type": "string", "description": "The ID of the reference set which defines the coordinate-space for this\nset of annotations."}, "name": {"type": "string", "description": "The display name for this annotation set."}, "source_uri": {"type": "string", "description": "The source URI describing the file from which this annotation set was\ngenerated, if any."}}, "description": "A set of Continous messages. Continuous values can be sent\nas a single Continuous message containing all values or a series\nof Continuous messages to either limit the size of the values array\nor to skip NaN values."}, "ga4ghFeature": {"type": "object", "properties": {"id": {"type": "string", "description": "Id of this annotation node."}, "name": {"type": "string", "description": "An optional name to provide for the feature."}, "gene_symbol": {"type": "string", "description": "The gene symbol the feature occurs on. This field may be\nreplaced with a more generic representation in a future version."}, "parent_id": {"type": "string", "description": "Parent Id of this node. Set to empty string if node has no parent."}, "child_ids": {"type": "array", "items": {"type": "string"}, "description": "Ordered array of Child Ids of this node. Since not all child nodes are\nordered by genomic coordinates, this can't always be reconstructed from\nparent_id's of the children alone."}, "feature_set_id": {"type": "string", "description": "Identifier for the containing feature set."}, "reference_name": {"type": "string", "description": "The reference on which this feature occurs (e.g. `chr20` or `X`)."}, "start": {"type": "string", "format": "int64", "description": "The start position at which this feature occurs (0-based). This\ncorresponds to the first base of the string of reference bases. Genomic\npositions are non-negative integers less than reference length. Features\nspanning the join of circular genomes are represented as two features one\non each side of the join (position 0)."}, "end": {"type": "string", "format": "int64", "description": "The end position (exclusive), resulting in [start, end) closed-open\ninterval. This is typically calculated by `start +\nreference_bases.length`."}, "strand": {"$ref": "#/definitions/ga4ghStrand", "description": "The strand on which the feature is present."}, "feature_type": {"$ref": "#/definitions/ga4ghOntologyTerm", "description": "Feature that is annotated by this region.  Normally, this will be a term\nin the Sequence Ontology."}}, "description": "Node in the annotation graph that annotates a contiguous region of a\nsequence."}, "ga4ghFeatureSet": {"type": "object", "properties": {"id": {"type": "string", "description": "The ID of this annotation set."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this annotation set belongs to."}, "reference_set_id": {"type": "string", "description": "The ID of the reference set which defines the coordinate-space for this\nset of annotations."}, "name": {"type": "string", "description": "The display name for this annotation set."}, "source_uri": {"type": "string", "description": "The source URI describing the file from which this annotation set was\ngenerated, if any."}}, "description": "A set of sequence features annotations."}, "ga4ghSearchContinuousRequest": {"type": "object", "properties": {"continuous_set_id": {"type": "string", "description": "The annotation set to search within. Required value."}, "reference_name": {"type": "string", "description": "Get continuous values on this reference. Required value."}, "start": {"type": "string", "format": "int64", "description": "The beginning of the window (0-based, inclusive) for which\ncontinuous values should be returned.\nRequired value."}, "end": {"type": "string", "format": "int64", "description": "The end of the window (0-based, exclusive) for which continuous\nvalues should be returned. \nRequired value."}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."}}, "description": "This request maps to the body of `POST /continuous/search` as JSON."}, "ga4ghSearchContinuousResponse": {"type": "object", "properties": {"continuous": {"type": "array", "items": {"$ref": "#/definitions/ga4ghContinuous"}, "description": "The list of matching continuous values, sorted by start position.\nAll sampled values within the query range are returned.\nUnsampled values are assigned 'NaN' value. The values returned\ndo not necessarily cover the same range as the query as all\nunsampled values might not be returned or if the query range extends\nbeyond the reference range."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /continuous/search` expressed as JSON."}, "ga4ghSearchContinuousSetsRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "The `Dataset` to search."}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."}}, "description": "* This request maps to the body of `POST /continuoussets/search` as JSON."}, "ga4ghSearchContinuousSetsResponse": {"type": "object", "properties": {"continuous_sets": {"type": "array", "items": {"$ref": "#/definitions/ga4ghContinuousSet"}, "description": "The list of matching feature sets."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /continuoussets/search` expressed as JSON."}, "ga4ghSearchFeatureSetsRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "The `Dataset` to search."}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."}}, "description": "* This request maps to the body of `POST /featuresets/search` as JSON."}, "ga4ghSearchFeatureSetsResponse": {"type": "object", "properties": {"feature_sets": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFeatureSet"}, "description": "The list of matching feature sets."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /featuresets/search` expressed as JSON."}, "ga4ghSearchFeaturesRequest": {"type": "object", "properties": {"feature_set_id": {"type": "string", "description": "The annotation set to search within. Either `feature_set_id` or\n`parent_id` must be non-empty."}, "name": {"type": "string", "description": "Only returns features with this name (case-sensitive, exact match)."}, "gene_symbol": {"type": "string", "description": "Only return features with matching the provided gene symbol\n(case-sensitive, exact match).\nThis field may be replaced with a more generic representation\nin a future version."}, "parent_id": {"type": "string", "description": "Restricts the search to direct children of the given parent `feature`\nID. Either `feature_set_id` or `parent_id` must be non-empty."}, "reference_name": {"type": "string", "description": "Only return features on the reference with this name\n(matched to literal reference name as imported from the GFF3)."}, "start": {"type": "string", "format": "int64", "description": "Required, if name or symbol not provided.\nThe beginning of the window (0-based, inclusive) for which\noverlapping features should be returned.  Genomic positions are\nnon-negative integers less than reference length.  Requests spanning the\njoin of circular genomes are represented as two requests one on each side\nof the join (position 0)."}, "end": {"type": "string", "format": "int64", "description": "Required, if name or symbol not provided.\nThe end of the window (0-based, exclusive) for which overlapping\nfeatures should be returned."}, "feature_types": {"type": "array", "items": {"type": "string"}, "description": "TODO: To be replaced with a fully featured ontology search\nonce the Metadata definitions are rounded out.\nIf specified, this query matches only annotations whose `feature_type`\nmatches one of the provided ontology terms."}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."}}, "description": "This request maps to the body of `POST /features/search` as JSON."}, "ga4ghSearchFeaturesResponse": {"type": "object", "properties": {"features": {"type": "array", "items": {"$ref": "#/definitions/ga4ghFeature"}, "description": "The list of matching annotations, sorted by start position. Annotations\nwhich share a start position are returned in a deterministic order."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /features/search` expressed as JSON."}, "ga4ghCallSet": {"type": "object", "properties": {"id": {"type": "string", "description": "The call set ID."}, "name": {"type": "string", "description": "The call set name."}, "biosample_id": {"type": "string", "description": "The Biosample the call set data was generated from."}, "variant_set_ids": {"type": "array", "items": {"type": "string"}, "description": "The IDs of the variant sets this call set has calls in."}, "created": {"type": "string", "format": "int64", "description": "The date this call set was created in milliseconds from the epoch."}, "updated": {"type": "string", "format": "int64", "description": "The time at which this call set was last updated in\nmilliseconds from the epoch."}, "attributes": {"$ref": "#/definitions/ga4ghAttributes", "description": "A map of additional information about the Call Set."}}, "description": "A CallSet is a collection of calls that were generated by the same analysis\nof the same sample."}, "ga4ghSearchCallSetsRequest": {"type": "object", "properties": {"variant_set_id": {"type": "string", "description": "The VariantSet to search."}, "name": {"type": "string", "description": "Only return call sets with this name (case-sensitive, exact match)."}, "biosample_id": {"type": "string", "description": "Return only call sets generated from the provided Biosample ID."}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."}}, "description": "******************  /callsets  *********************\nThis request maps to the body of `POST /callsets/search` as JSON."}, "ga4ghSearchCallSetsResponse": {"type": "object", "properties": {"call_sets": {"type": "array", "items": {"$ref": "#/definitions/ga4ghCallSet"}, "description": "The list of matching call sets."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /callsets/search` expressed as JSON."}, "ga4ghSearchVariantSetsRequest": {"type": "object", "properties": {"dataset_id": {"type": "string", "description": "The `Dataset` to search."}, "page_size": {"type": "integer", "format": "int32", "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."}, "page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets. To\nget the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."}}, "description": "******************  /variantsets  *********************\nThis request maps to the body of `POST /variantsets/search` as JSON."}, "ga4ghSearchVariantSetsResponse": {"type": "object", "properties": {"variant_sets": {"type": "array", "items": {"$ref": "#/definitions/ga4ghVariantSet"}, "description": "The list of matching variant sets."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /variantsets/search` expressed as JSON."}, "ga4ghSearchVariantsByGeneNameResponse": {"type": "object", "properties": {"variants": {"type": "array", "items": {"$ref": "#/definitions/ga4ghVariant"}, "description": "The list of matching variants.\nIf the `callSetId` field on the returned calls is not present,\nthe ordering of the call sets from a `SearchCallSetsRequest`\nover the parent `VariantSet` is guaranteed to match the ordering\nof the calls on each `Variant`. The number of results will also be\nthe same."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /variantsbygenename` expressed as JSON."}, "ga4ghSearchVariantsResponse": {"type": "object", "properties": {"variants": {"type": "array", "items": {"$ref": "#/definitions/ga4ghVariant"}, "description": "The list of matching variants.\nIf the `callSetId` field on the returned calls is not present,\nthe ordering of the call sets from a `SearchCallSetsRequest`\nover the parent `VariantSet` is guaranteed to match the ordering\nof the calls on each `Variant`. The number of results will also be\nthe same."}, "next_page_token": {"type": "string", "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."}}, "description": "This is the response from `POST /variants/search` expressed as JSON."}, "ga4ghVariantSet": {"type": "object", "properties": {"id": {"type": "string", "description": "The variant set ID."}, "name": {"type": "string", "description": "The variant set name."}, "dataset_id": {"type": "string", "description": "The ID of the dataset this variant set belongs to."}, "reference_set_id": {"type": "string", "description": "The ID of the reference set that describes the sequences used by the\nvariants in this set."}, "patient_id": {"type": "string", "title": "For variant data identification and search join purposes"}, "sample_id": {"type": "string", "title": "For variant data identification and search join purposes"}, "metadata": {"type": "array", "items": {"$ref": "#/definitions/ga4ghVariantSetMetadata"}, "description": "Optional metadata associated with this variant set.\nThis array can be used to store information about the variant set, such as\ninformation found in VCF header fields, that isn't already available in\nfirst class fields such as \"name\"."}}, "description": "A VariantSet is a collection of variants and variant calls intended to be\nanalyzed together."}, "ga4ghVariantSetMetadata": {"type": "object", "properties": {"key": {"type": "string", "description": "The top-level key."}, "value": {"type": "string", "description": "The value field for simple metadata."}, "id": {"type": "string", "title": "User-provided ID field, not enforced by this API.\nTwo or more pieces of structured metadata with identical\nid and key fields are considered equivalent.\nFIXME: If it's not enforced, then why can't it be null?"}, "type": {"type": "string", "description": "The type of data."}, "number": {"type": "string", "description": "The number of values that can be included in a field described by this\nmetadata."}, "description": {"type": "string", "description": "A textual description of this metadata."}, "attributes": {"$ref": "#/definitions/ga4ghAttributes", "description": "A map of additional information about the metadata record."}}, "description": "This metadata represents VCF header information."}}}